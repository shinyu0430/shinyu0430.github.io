<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS Filter 濾鏡效果</title>
    <url>/2021/09/18/cssfilter/</url>
    <content><![CDATA[<p>我們可以使用 CSS Filter 直接在元素上加上濾鏡效果，<br>先來個所有濾鏡效果的呈現 DEMO：</p>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="gOReYWK" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/gOReYWK">
  </a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h2 id="10-種-filter-濾鏡效果"><a href="#10-種-filter-濾鏡效果" class="headerlink" title="10 種 filter 濾鏡效果"></a>10 種 filter 濾鏡效果</h2><p>filter 效果一共有 10 種，其中最常使用的是第 1 個 <code>blur()</code> 和第 8 個的 <code>opacity()</code>。</p>
<h3 id="1-blur-模糊效果"><a href="#1-blur-模糊效果" class="headerlink" title="1. blur() 模糊效果"></a>1. blur() 模糊效果</h3><p>函示內放入模糊的程度，值越大越模糊</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-brightness-調整亮度"><a href="#2-brightness-調整亮度" class="headerlink" title="2. brightness() 調整亮度"></a>2. brightness() 調整亮度</h3><p>函示內放入 % 數來調整亮度，<br><code>&lt; 100%</code> 會減少亮度，<br><code>&gt; 100%</code> 會增加亮度。<br><code>0%</code> 會呈現全黑，預設值為 <code>1</code> 。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">brightness</span>(<span class="number">2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-contrast-調整對比度"><a href="#3-contrast-調整對比度" class="headerlink" title="3. contrast() 調整對比度"></a>3. contrast() 調整對比度</h3><p>函示內放入 % 數來調整對比度，<br><code>&lt; 100%</code> 會減少對比度，<br><code>&gt; 100%</code> 會增加對比度。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">contrast</span>(<span class="number">200%</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-drop-shadow-陰影效果"><a href="#4-drop-shadow-陰影效果" class="headerlink" title="4. drop-shadow() 陰影效果"></a>4. drop-shadow() 陰影效果</h3><p>這個函數的特性和 box-shadow 的屬性很相似，<br>但 drop-shadow 可以製作和物件不透明區域完全相同形狀的陰影，詳細比較可以參考<a href="http://blog.shihshih.com/drop-shadow-vs-box-shadow/">這篇文章</a></p>
<p><code>drop-shadow()</code> 可帶入的 4 個參數分別為：</p>
<ol>
<li>(必填)offset-x：陰影水平偏移量的長度</li>
<li>(必填)offset-y：陰影垂直偏移量的長度</li>
<li>blur-radius：隱影模糊程度，值越大越模糊</li>
<li>color：陰影顏色<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(<span class="number">16px</span> <span class="number">16px</span> <span class="number">10px</span> black)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="5-grayscale-調整灰階程度"><a href="#5-grayscale-調整灰階程度" class="headerlink" title="5. grayscale() 調整灰階程度"></a>5. grayscale() 調整灰階程度</h3><p>函示內放入 % 數或、0-1 來調整圖像灰度，<br>值介於 0-100% 或 0-1，<br>0% 和 0 代表顏色不變，為預設值，100% 和 1 代表變黑白的。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>:<span class="built_in">grayscale</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-hue-rotate-色相相轉"><a href="#6-hue-rotate-色相相轉" class="headerlink" title="6. hue-rotate() 色相相轉"></a>6. hue-rotate() 色相相轉</h3><p>透過色相旋轉來調整顏色呈現，函示內放入 deg 色環角度值來調整圖像灰度，<br>值介於 0deg - 360deg 間，超過 <code>360deg</code> 的值相當於繞了一圈。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">hue-rotate</span>(<span class="number">90deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="7-invert-負面效果"><a href="#7-invert-負面效果" class="headerlink" title="7. invert() 負面效果"></a>7. invert() 負面效果</h3><p>所謂的負片就是反轉成顏色和明暗程度，<br>函示內放入 % 數設定反轉的程度，值介於 0-100% 間，預設值為 0%。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">invert</span>(<span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8-opactiy-調整透明度"><a href="#8-opactiy-調整透明度" class="headerlink" title="8.opactiy 調整透明度"></a>8.opactiy 調整透明度</h3><p>函示內放入 % 數設定透明度，值介於 0-100% 間，預設值為 100%。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">opacity</span>(<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="9-saturate-調整飽和度"><a href="#9-saturate-調整飽和度" class="headerlink" title="9.saturate() 調整飽和度"></a>9.saturate() 調整飽和度</h3><p>函示內放入 % 數設定飽和度，預設值為 1<br><code>&lt;100%</code> 越來越不飽和<br><code>&gt;100％</code> 高度飽和</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">saturate</span>(<span class="number">200%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="10-sepia-深褐色效果"><a href="#10-sepia-深褐色效果" class="headerlink" title="10. sepia() 深褐色效果"></a>10. sepia() 深褐色效果</h3><p>函示內放入 % 數設定深褐色的程度，值介於 0-100% 之間，預設值是 0。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">sepia</span>(<span class="number">100%</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="複合效果"><a href="#複合效果" class="headerlink" title="複合效果"></a>複合效果</h3><p>除了單獨的使用濾鏡外，我們也可以組合任意數量的函數來設定效果。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 同時設定對比度、亮度、飽和度*/</span></span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">contrast</span>(<span class="number">175%</span>) <span class="built_in">brightness</span>(<span class="number">3%</span>) <span class="built_in">saturate</span>(<span class="number">200%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>以上就是不同 filter 的介紹，實作上如果有遇到子元素被 filter 影響的問題，<br>可以參考這篇文章 -<a href="https://shinyu0430.github.io/2021/09/18/filterchildproblem/">CSS Filter 影響子元素的解決辦法</a></p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter">MDN Web Docs-filter</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS Filter 影響子元素的解決辦法</title>
    <url>/2021/09/18/filterchildproblem/</url>
    <content><![CDATA[<p>透過 filter 我們可以為元素加上不同的效果，像是模糊，色彩偏移等(<a href="https://shinyu0430.github.io/2021/09/18/cssfilter">filter 介紹</a>)。但我們可能會發現一個奇怪的現象：</p>
<h2 id="filter-導致-position-失效"><a href="#filter-導致-position-失效" class="headerlink" title="filter 導致 position 失效"></a>filter 導致 position 失效</h2><p>在這個範例中，我們先設定兩個 <code>.box</code>，再分別在子元素 <code>.box div</code> 加上 <code>position:fixed</code>，第二個<code>.box</code>再單獨設定<code>filter:grayscale(1)</code>。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:fixed&quot;</span>&gt;</span>I am fixed on scroll<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;filter:grayscale(1)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:fixed&quot;</span>&gt;</span>I move with the scroll<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>從下面的 CodePen 範例中，我們可以發現向下滾動後，加上了 filter 的 <code>.box div</code> 不會跟著移動。</p>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="XWgZLaV" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/XWgZLaV">
  </a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p>會這樣改變的原因是因為，加上了 filter 後子元素不再以 Viewport 做為基準，<br>而是以設定了 filter 的 <code>.box</code> 為基準。</p>
<p>更詳細的說明可以參考 <a href="https://drafts.fxtf.org/filter-effects/#FilterProperty">W3C</a> 的解釋，大意就是當 <code>filter</code> 的屬性不是 <code>none</code> 時，除非 filter 是設定在根節點（<code>HTML</code>）上，不然會為有設定 <code>position:absolute</code> 或 <code>position:fixed</code> 的子元素產生一個新的容器，使得這些子元素的定位基準變成這些新的容器。</p>
<p>另外，這個現象也會發生在 <code>transform</code> 上喔！</p>
<p><strong>解決方案</strong><br>我們可以透過將 filter 設定在子元素來解決。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:fixed;filter:grayscale(1)&quot;</span>&gt;</span>I move with the scroll<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="ExXQBwL" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/ExXQBwL">
  css-filter-child-position-resolve</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p>這樣一來子元素的定位就不會被影響了～</p>
<h2 id="filter-影響子元素樣式"><a href="#filter-影響子元素樣式" class="headerlink" title="filter 影響子元素樣式"></a>filter 影響子元素樣式</h2><p>我們可能會想透過 filter 為我們的背景圖片加上模糊（blur）效果：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;filter:blur(3px)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Cute Dog<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>但實作後卻會發現圖片上的字也一起變模糊了</p>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="LYLQKRB" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/LYLQKRB">
  </a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p><strong>解決方案</strong><br>我們可以將模糊效果改設定在偽元素上來避免這個問題。<br>(記得也要拿掉在<code>.box</code>設定的 filter)</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://images.unsplash.com/photo-1552053831-71594a27632d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=624&amp;q=80&quot;</span>)</span><br><span class="line">    <span class="number">50%</span> <span class="number">30%</span>;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">3px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="RwgQzXP" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/RwgQzXP">
  css-filter-child-style</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://stackoverflow.com/questions/52937708/why-does-applying-a-css-filter-on-the-parent-break-the-child-positioning">Why does applying a CSS-Filter on the parent break the child positioning?</a></p>
<p><a href="https://blog.csdn.net/qq_41883423/article/details/105867026">CSS：filter（滤镜）修饰父元素背景，影响子元素问题解决</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>免費圖片空間 Imgur 使用教學</title>
    <url>/2021/09/19/imgurturtorial/</url>
    <content><![CDATA[<style>
    img{
        width:70%;
    }
</style>

<p>Imgur 是一個網路相簿網站，2009年創立，主要提供免費的相片儲存服務，現今每日使用者達數百萬。Imgur 最大的優點就是它沒有流量限制，也不需要註冊帳號就可以直接使用，使用上非常方便。</p>
<span id="more"></span>
<h2 id="Imgur-網頁介紹"><a href="#Imgur-網頁介紹" class="headerlink" title="Imgur 網頁介紹"></a>Imgur 網頁介紹</h2><p>進到 imgur 的網頁後，我們可以看到下方有許多其他使用者上傳的圖片，<br><img src="https://imgur.com/XJfw5tc.jpg"><br>我們也可以透過上方的搜尋欄，搜尋特定的圖片<br><img src="https://imgur.com/k2sSTN1.jpg"></p>
<h2 id="上傳檔案"><a href="#上傳檔案" class="headerlink" title="上傳檔案"></a>上傳檔案</h2><p>如果我們想要上傳圖片，可以點擊首頁左上方的 New Post<br><img src="https://imgur.com/56WlOl4.jpg"><br>點擊後會跳轉到這個畫面，可以透過拖移或是點擊的方式上傳我們本地端的圖片，imgur 支援多種圖片格式，單張非動畫圖片最大容量限制為 20 MB，每小時最多上傳 50 張，詳細限制可以參考<a href="https://help.imgur.com/hc/en-us/articles/115000083326-What-files-can-I-upload-What-is-the-size-limit-">Imgur Help</a>的說明。</p>
<p><img src="https://imgur.com/TWYw3Mm.jpg"><br>成功上傳後會出現這樣的畫面，雖然前面有提到首頁可以看到其他使用者上傳的圖片，但<strong>預設</strong>上傳的圖片是<strong>不會</strong>連結到 Imgur 社群的喔，如果希望上傳到社群，可以替圖片加上標題(title)和說明(description)，再點擊「To Community」就可以公開囉。<br><img src="https://imgur.com/iOHIZ9E.jpg"><br>複製圖片網址的方式也很簡單，將滑鼠移到圖片上，並點擊 Copy link 就能成功複製圖片網址了（<a href="https://imgur.com/ipZyGmJ.jpg">https://imgur.com/ipZyGmJ.jpg</a>），點擊「···」則可以對圖片進行編輯（調整大小、旋轉圖片）、分享連結、下載、刪除。<br><img src="https://imgur.com/rhF08TY.jpg"></p>
<h2 id="在-HTML-中插入外部圖片"><a href="#在-HTML-中插入外部圖片" class="headerlink" title="在 HTML 中插入外部圖片"></a>在 HTML 中插入外部圖片</h2><p>使用 Imgur 在 HTML 中插入圖片有兩種方式</p>
<ol>
<li>將 Imgur 嵌入<br>呈現效果如下：<blockquote class="imgur-embed-pub" lang="en" data-id="rhF08TY"><a href="https://imgur.com/rhF08TY">View post on imgur.com</a></blockquote><script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script></li>
</ol>
<p>使用的方式為點擊圖片上方的「···」，選取 Get share links<br><img src="https://imgur.com/yE1mDlY.jpg"><br>再複製 HTML Embed 的語法，貼上到我們的網頁中。<br><img src="https://imgur.com/vdEGgvT.jpg"></p>
<ol start="2">
<li>使用 img 語法<br>如果不希望保留 Imgur 的外框，可以直接使用 img 標籤，呈現效果如下：<img src="https://imgur.com/ipZyGmJ.jpg" alt="範例圖片"> </li>
</ol>
<p>，並放入我們點擊 Copy Link 得到的「<a href="https://imgur.com/ipZyGmJ%E3%80%8D%EF%BC%8C%E5%9C%A8%E5%BE%8C%E9%9D%A2">https://imgur.com/ipZyGmJ」，在後面</a> <strong>加上副檔名<code>.jpg</code></strong> ，就可以正確插入圖片囉。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://imgur.com/ipZyGmJ.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;範例圖片&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<h2 id="帳號註冊"><a href="#帳號註冊" class="headerlink" title="帳號註冊"></a>帳號註冊</h2><p>如果我們希望上傳後還能對這些圖片進行管理的話，可以註冊 Imgur 帳號。註冊的方式也很簡單，到首頁點擊右上方的 SignUp 就可以註冊了。<br><img src="https://imgur.com/VuWJi0Q.jpg"><br>成功登入後我們就可以在這管理自己上傳的圖片囉。<br><img src="https://imgur.com/o5CzMa2.jpg"></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>解決兩個寬度 50％ 的子元素無法在同行的問題</title>
    <url>/2021/09/19/inlineblockwidth50/</url>
    <content><![CDATA[<p>行內區塊(<code>inline-block</code>)可以讓我們可以以行內（<code>inline</code>）的方式呈現，但同時擁有（<code>block</code>）的屬性，不過，在設定寬度上我們可能會遇到一個奇怪的問題：</p>
<span id="more"></span>
<p>假設我們想要新增兩個在同行的 div 元素，並讓他們各佔一半，我們會這樣撰寫：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>CHILD<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>CHILD<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#d8e2dc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我們可能會預期畫面出現<br><img src="https://imgur.com/rUFostx.jpg"><br>卻發現結果兩個子元素沒有在同一行<br><img src="https://imgur.com/sfRoQzu.jpg"><br>而會有這樣的問題是因為<strong>換行符號</strong>。我們在第一個 <code>div</code> 標籤後方加上的換行符號，會相等於空白符號，這個空白符號的寬度加上兩個子元素的寬度就會超過 100%，導致兩個子元素無法放在同一行。</p>
<p><strong>解決辦法有幾種：</strong></p>
<ol>
<li><p>刪除換行符號<br>最簡單的方式就是直接刪除換行符號，不過這會造成 HTML 結構的可讀性變差。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>CHILD<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span>CHILD<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>將字體大小設為 0<br>知道是因為空白符號造成無法在同行後，我們可以聯想到只要將字體設為 0 ，這個空白就不會佔有空間了。</p>
</li>
</ol>
<p>實作放事就是直接在父層加上 font-size:0 （記得子層如果有文字要記得設定字體大小喔）。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0</span>; <span class="comment">/* 隱藏空白符號 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;  <span class="comment">/* 設定子元素字體大小 */</span></span><br><span class="line">  <span class="attribute">width</span>:<span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>除了這些也可以使用負的 margin、letter-spacing、word-spacing 調整，但個人覺得沒有那麼實用，以上就是行內區塊無法同行的解決辦法說明囉。</p>
<p><strong>參考資料</strong><br><a href="https://www.zhangxinxu.com/wordpress/2010/11/%E6%8B%9C%E6%8B%9C%E4%BA%86%E6%B5%AE%E5%8A%A8%E5%B8%83%E5%B1%80-%E5%9F%BA%E4%BA%8Edisplayinline-block%E7%9A%84%E5%88%97%E8%A1%A8%E5%B8%83%E5%B1%80/">拜拜了,浮动布局-基于display:inline-block的列表布局</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 學習常用字：大陸/台灣對照表</title>
    <url>/2021/09/07/jswordcompare/</url>
    <content><![CDATA[<p>以下整理了幾個在學習 JavaScript 中常見的詞語。</p>
<span id="more"></span>
<table>
<thead>
<tr>
<th>英文</th>
<th>台灣</th>
<th>大陸</th>
</tr>
</thead>
<tbody><tr>
<td>array</td>
<td>陣列</td>
<td>數組</td>
</tr>
<tr>
<td>boolean</td>
<td>布林值</td>
<td>布尔值</td>
</tr>
<tr>
<td>cache</td>
<td>快取</td>
<td>緩存</td>
</tr>
<tr>
<td>call</td>
<td>呼叫</td>
<td>調用</td>
</tr>
<tr>
<td>callback</td>
<td>回呼</td>
<td>回调</td>
</tr>
<tr>
<td>class</td>
<td>類別</td>
<td>类</td>
</tr>
<tr>
<td>context</td>
<td>背景關係</td>
<td>上下文</td>
</tr>
<tr>
<td>declaration</td>
<td>宣告</td>
<td>声明</td>
</tr>
<tr>
<td>destructor</td>
<td>解構式</td>
<td>析构函数</td>
</tr>
<tr>
<td>entity</td>
<td>物體</td>
<td>实体</td>
</tr>
<tr>
<td>expression</td>
<td>運算式</td>
<td>表达式</td>
</tr>
<tr>
<td>function</td>
<td>函式</td>
<td>函数</td>
</tr>
<tr>
<td>global</td>
<td>全域</td>
<td>全局</td>
</tr>
<tr>
<td>invoke</td>
<td>喚起</td>
<td>调用</td>
</tr>
<tr>
<td>local</td>
<td>區域</td>
<td>局部</td>
</tr>
<tr>
<td>loop</td>
<td>迴圈</td>
<td>循环</td>
</tr>
<tr>
<td>memory</td>
<td>記憶體</td>
<td>内存</td>
</tr>
<tr>
<td>module</td>
<td>模組</td>
<td>模块</td>
</tr>
<tr>
<td>object</td>
<td>物件</td>
<td>对象</td>
</tr>
<tr>
<td>return</td>
<td>回傳、傳回</td>
<td>返回</td>
</tr>
<tr>
<td>string</td>
<td>字串</td>
<td>字符串</td>
</tr>
<tr>
<td>type</td>
<td>型別</td>
<td>类型</td>
</tr>
<tr>
<td>variable</td>
<td>變數</td>
<td>变量</td>
</tr>
<tr>
<td>recursion</td>
<td>遞迴</td>
<td>递归</td>
</tr>
<tr>
<td>run</td>
<td>執行</td>
<td>運行</td>
</tr>
<tr>
<td>object</td>
<td>物件</td>
<td>对象</td>
</tr>
<tr>
<td>constructor</td>
<td>建構式</td>
<td>构造函数</td>
</tr>
<tr>
<td>batch</td>
<td>批次</td>
<td>批量</td>
</tr>
</tbody></table>
<p>資料來源：<a href="https://zh.wikibooks.org/zh-tw/%E5%A4%A7%E9%99%86%E5%8F%B0%E6%B9%BE%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%9C%AF%E8%AF%AD%E5%AF%B9%E7%85%A7%E8%A1%A8">大陸台灣計算機術語對照表 </a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Margin 和 Padding 的簡寫</title>
    <url>/2021/09/18/marginpaddingshorthand/</url>
    <content><![CDATA[<style>
    img{
        width:50%
    }
</style>
<p>在撰寫 CSS 的時候，我們常會使用到 Margin 和 Padding 來調整元素的位置，<br>而透過簡寫可以讓我們的 CSS 更加整潔。</p>
<p>Margin 和 Padding 的縮寫方式是相同的，有四種寫法：</p>
<span id="more"></span>
<ol>
<li><p><code>margin: 10px</code>：margin:上下左右<br>同時設定「上下左右」的間距<br><img src="https://i.imgur.com/RqJy4GM.png"></p>
</li>
<li><p><code>margin:10px 20px</code>：margin:上下 左右<br>分別設定「上下」和「左右」的間距<br><img src="https://i.imgur.com/9j4szx2.png"></p>
</li>
<li><p><code>margin:10px 20px 30px</code>：margin:上 左右 下<br>分別設定「上」、「左右」和「下」的間距<br><img src="https://i.imgur.com/NPcVL8c.png"></p>
</li>
<li><p><code>margin:10px 30px 40px 20px</code>：margin: 上 右 下 左<br>分別設定「上」、「右」、「下」和「左」的間距<br><img src="https://i.imgur.com/I9mJQ89.png"></p>
</li>
</ol>
<h2 id="縮寫練習"><a href="#縮寫練習" class="headerlink" title="縮寫練習"></a>縮寫練習</h2><h3 id="練習一"><a href="#練習一" class="headerlink" title="練習一"></a>練習一</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">20px</span>; <span class="comment">/* 上、右、下、左 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>按照第三種方法簡化後，可以寫成：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>; <span class="comment">/* 上、左右、下 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="練習二"><a href="#練習二" class="headerlink" title="練習二"></a>練習二</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>按照第二種方法簡化後，可以寫成：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">0</span>;  <span class="comment">/* 上下、左右 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果希望了解其他的 CSS 縮寫，可以查看 <a href="https://www.kobzarev.com/wp-content/uploads/cheatsheets/css/css-cheat-sheet.pdf">CSS-Shorthand-Cheat-Sheet.pdf</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 字串方法整理</title>
    <url>/2021/09/20/javascriptstringmethod/</url>
    <content><![CDATA[<p>以下針對不同類型的字串方法做分類整理：</p>
<span id="more"></span>
<style>
table th:first-of-type {
    width: 34%;
}

</style>
<table>
<thead>
<tr>
<th>分類</th>
<th>語法</th>
</tr>
</thead>
<tbody><tr>
<td>回傳單一字元</td>
<td><a href="#charAt-%EF%BC%9A%E5%9B%9E%E5%82%B3%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%AD%97%E5%85%83">charAt()</a>、<a href="#charCodeAt-%EF%BC%9A%E5%9B%9E%E5%82%B3%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE%E5%AD%97%E5%85%83%E7%9A%84-Unicode-%E7%B7%A8%E7%A2%BC">charCodeAt()</a></td>
</tr>
<tr>
<td>回傳新字串</td>
<td><a href="#concat-%EF%BC%9A%E9%80%A3%E6%8E%A5%E5%A4%9A%E5%80%8B%E5%AD%97%E4%B8%B2">concat()</a>、<a href="#repeat-%EF%BC%9A%E8%A4%87%E8%A3%BD%E5%AD%97%E4%B8%B2%E6%95%B8%E6%AC%A1">repeat()</a>、<a href="#slice-%EF%BC%9A%E6%8F%90%E5%8F%96%E5%AD%97%E4%B8%B2%E7%89%87%E6%AE%B5">slice()</a>、<a href="#substr-%EF%BC%9A%E6%8F%90%E5%8F%96%E5%AD%97%E4%B8%B2%E7%89%87%E6%AE%B5">substr()</a>、<a href="#substring-%EF%BC%9A%E6%8F%90%E5%8F%96%E5%AD%97%E4%B8%B2%E7%89%87%E6%AE%B5">substring()</a>、<a href="#trim-%EF%BC%9A%E5%8E%BB%E9%99%A4%E5%AD%97%E4%B8%B2%E5%85%A9%E9%82%8A%E7%A9%BA%E7%99%BD">trim()</a>、<a href="#toLowerCase-%EF%BC%9A%E5%AD%97%E4%B8%B2%E8%BD%89%E6%8F%9B%E6%88%90%E5%B0%8F%E5%AF%AB">toLowerCase()</a>、<a href="#toUpperCase-%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%89%E6%8F%9B%E6%88%90%E5%A4%A7%E5%AF%AB">toUpperCase()</a></td>
</tr>
<tr>
<td>檢查字串</td>
<td><a href="#endsWith-%EF%BC%9A%E5%88%A4%E6%96%B7%E5%AD%97%E4%B8%B2%E6%98%AF%E5%90%A6%E4%BB%A5%E7%89%B9%E5%AE%9A%E5%AD%97%E4%B8%B2%E7%B5%90%E5%B0%BE">endsWith()</a>、<a href="#startsWith-%EF%BC%9A%E5%88%A4%E6%96%B7%E5%AD%97%E4%B8%B2%E6%98%AF%E5%90%A6%E4%BB%A5%E7%89%B9%E5%AE%9A%E5%AD%97%E4%B8%B2%E9%96%8B%E9%A0%AD">startsWith()</a>、<a href="#includes-%EF%BC%9A%E5%88%A4%E6%96%B7%E5%AD%97%E4%B8%B2%E4%B8%AD%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E7%89%B9%E5%AE%9A%E5%AD%90%E4%B8%B2">includes()</a>、<a href="#indexOf-%EF%BC%9A%E5%B0%8B%E6%89%BE%E5%AD%97%E4%B8%B2%E9%A6%96%E6%AC%A1%E5%87%BA%E7%8F%BE%E7%9A%84%E4%BD%8D%E7%BD%AE">indexOf()</a></td>
</tr>
<tr>
<td>檢查字串 - 可與正規表達式搭配</td>
<td><a href="#search-%EF%BC%9A%E5%B0%8B%E6%89%BE%E8%88%87%E5%AD%97%E4%B8%B2%E6%88%96%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F%E7%9B%B8%E5%90%8C%E7%9A%84%E5%80%BC">search()</a>、<a href="#match-%EF%BC%9A%E5%B0%8B%E6%89%BE%E8%88%87%E5%AD%97%E4%B8%B2%E6%88%96%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F%E7%9B%B8%E5%90%8C%E7%9A%84%E5%A4%9A%E5%80%8B%E5%80%BC">match()</a>、<a href="#replace-%EF%BC%9A%E6%9B%BF%E6%8F%9B%E8%88%87%E5%AD%97%E4%B8%B2%E6%88%96%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F%E7%9B%B8%E5%90%8C%E7%9A%84%E5%80%BC">replace()</a>、<a href="#replaceall-%EF%BC%9A%E6%9B%BF%E6%8F%9B%E8%88%87%E5%AD%97%E4%B8%B2%E6%88%96%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F%E7%9B%B8%E5%90%8C%E7%9A%84%E5%A4%9A%E5%80%8B%E5%80%BC">relaceAll()</a></td>
</tr>
<tr>
<td>字串與陣列</td>
<td><a href="#split-%EF%BC%9A%E5%AD%97%E4%B8%B2%E5%88%86%E5%89%B2%E7%82%BA%E9%99%A3%E5%88%97">split()</a>、<a href="#join-%EF%BC%9A%E9%99%A3%E5%88%97%E5%90%88%E4%BD%B5%E7%82%BA%E5%AD%97%E4%B8%B2">join()</a></td>
</tr>
</tbody></table>
<h2 id="回傳單一字元"><a href="#回傳單一字元" class="headerlink" title="回傳單一字元"></a>回傳單一字元</h2><h3 id="charAt-：回傳指定位置的字元"><a href="#charAt-：回傳指定位置的字元" class="headerlink" title="charAt()：回傳指定位置的字元"></a>charAt()：回傳指定位置的字元</h3><p>在參數中放入 0 到 字串長度-1 的數字，</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;HELLO WORLD&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> char = str.charAt(<span class="number">2</span>) <span class="comment">//L</span></span><br></pre></td></tr></table></figure>

<h3 id="charCodeAt-：回傳指定位置字元的-Unicode-編碼"><a href="#charCodeAt-：回傳指定位置字元的-Unicode-編碼" class="headerlink" title="charCodeAt()：回傳指定位置字元的 Unicode 編碼"></a>charCodeAt()：回傳指定位置字元的 Unicode 編碼</h3><p>在參數中放入 0 到 字串長度-1 的數字。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;HELLO WORLD&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> char = str.charCodeAt(<span class="number">0</span>);<span class="comment">//72</span></span><br></pre></td></tr></table></figure>

<h2 id="回傳新字串"><a href="#回傳新字串" class="headerlink" title="回傳新字串"></a>回傳新字串</h2><h3 id="concat-：連接多個字串"><a href="#concat-：連接多個字串" class="headerlink" title="concat()：連接多個字串"></a>concat()：連接多個字串</h3><p>參數中放入欲連接的字串。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str1 = <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">&quot;world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str1.concat(str2); <span class="comment">//&quot;Hello world!&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 可以放入多個字串</span></span><br><span class="line"><span class="keyword">let</span> str1 = <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">&quot;world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> str3 = <span class="string">&quot;mavis!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str1.concat(str2,str3); <span class="comment">//&quot;Hello world!mavis!&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="repeat-：複製字串數次"><a href="#repeat-：複製字串數次" class="headerlink" title="repeat()：複製字串數次"></a>repeat()：複製字串數次</h3><p>參數中放入要複製的次數</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.repeat(<span class="number">3</span>);<span class="comment">//&quot;Hello!Hello!Hello!&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="slice-：提取字串片段"><a href="#slice-：提取字串片段" class="headerlink" title="slice()：提取字串片段"></a>slice()：提取字串片段</h3><p>參數中可放入兩個值：<code>slice(起始位置,結束位置)</code></p>
<ol>
<li>起始位置，可為負值</li>
<li>（選填）結束位置，可為負值，預設會傳到字串結尾</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.slice(<span class="number">0</span>,<span class="number">5</span>); <span class="comment">//&quot;Hello&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.slice(-<span class="number">2</span>,<span class="number">4</span>); <span class="comment">//&quot;&quot;，</span></span><br></pre></td></tr></table></figure>

<h3 id="substr-：提取字串片段"><a href="#substr-：提取字串片段" class="headerlink" title="substr()：提取字串片段"></a>substr()：提取字串片段</h3><p>參數中可放入兩個值：<code>substr(起始位置,提取字串長度)</code></p>
<ol>
<li>起始位置，可為負值</li>
<li>（選填）提取字串長度，預設回傳到字串結尾</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.substr(<span class="number">6</span>,<span class="number">5</span>)<span class="comment">//world</span></span><br></pre></td></tr></table></figure>

<h3 id="substring-：提取字串片段"><a href="#substring-：提取字串片段" class="headerlink" title="substring()：提取字串片段"></a>substring()：提取字串片段</h3><p>參數中可放入兩個值：<code>substring(起始位置,結束位置)</code></p>
<ol>
<li>起始位置，不可為負值</li>
<li>（選填）結束位置，不可為負值，預設會傳到字串結尾</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.substring(<span class="number">0</span>,<span class="number">5</span>); <span class="comment">//&quot;Hello&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.substring(-<span class="number">2</span>,<span class="number">5</span>); <span class="comment">//&quot;Hello&quot;，若帶入負值會從預設 0 開始</span></span><br></pre></td></tr></table></figure>

<h3 id="trim-：去除字串兩邊空白"><a href="#trim-：去除字串兩邊空白" class="headerlink" title="trim()：去除字串兩邊空白"></a>trim()：去除字串兩邊空白</h3><p>空白包含 enter、tab、換行符號，並不適用於 null, undefined。 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;  mavis  &quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.trim();<span class="comment">// &quot;Mavis&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="toLowerCase-：字串轉換成小寫"><a href="#toLowerCase-：字串轉換成小寫" class="headerlink" title="toLowerCase()：字串轉換成小寫"></a>toLowerCase()：字串轉換成小寫</h3><p>將字串轉換成小寫</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;MAVIS&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.toLowerCase();<span class="comment">// &quot;mavis&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="toUpperCase-：字符串轉換成大寫"><a href="#toUpperCase-：字符串轉換成大寫" class="headerlink" title="toUpperCase()：字符串轉換成大寫"></a>toUpperCase()：字符串轉換成大寫</h3><p>字串轉換成大寫</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;mavis&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.toUpperCase();<span class="comment">// &quot;Mavis&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="檢查字串"><a href="#檢查字串" class="headerlink" title="檢查字串"></a>檢查字串</h2><h3 id="endsWith-：判斷字串是否以特定字串結尾"><a href="#endsWith-：判斷字串是否以特定字串結尾" class="headerlink" title="endsWith()：判斷字串是否以特定字串結尾"></a>endsWith()：判斷字串是否以特定字串結尾</h3><p>判斷字串是否以特定字串結尾，回傳 Boolean 值。參數放入要判斷的特定字串。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意：會判斷大小寫</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world&quot;</span>;</span><br><span class="line">str.endsWith(<span class="string">&quot;world&quot;</span>)   <span class="comment">// true</span></span><br><span class="line">str.endsWith(<span class="string">&quot;World&quot;</span>)   <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<h3 id="startsWith-：判斷字串是否以特定字串開頭"><a href="#startsWith-：判斷字串是否以特定字串開頭" class="headerlink" title="startsWith()：判斷字串是否以特定字串開頭"></a>startsWith()：判斷字串是否以特定字串開頭</h3><p>判斷字串是否以特定字串開頭，回傳 Boolean 值。參數放入要判斷的特定字串。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意：會區分大小寫</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world&quot;</span>;</span><br><span class="line">str.endsWith(<span class="string">&quot;Hello&quot;</span>)   <span class="comment">// true</span></span><br><span class="line">str.endsWith(<span class="string">&quot;hello&quot;</span>)   <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<h3 id="includes-：判斷字串中是否包含特定子串"><a href="#includes-：判斷字串中是否包含特定子串" class="headerlink" title="includes()：判斷字串中是否包含特定子串"></a>includes()：判斷字串中是否包含特定子串</h3><p>判斷字串中是否包含特定子串，回傳 Boolean 值，<br>參數中可放入兩個值：<code>includes(判斷的特定字串,起始位置)</code></p>
<ol>
<li>要判斷的特定字串</li>
<li>（選填）起始位置，預設為 0</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world!!!!&quot;</span>;</span><br><span class="line">str.includes(<span class="string">&quot;world&quot;</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 填入第二個參數，設定起始位置</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world,nice to meet you!&quot;</span>;</span><br><span class="line">str.includes(<span class="string">&quot;world&quot;</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure>

<h3 id="indexOf-：尋找字串首次出現的位置"><a href="#indexOf-：尋找字串首次出現的位置" class="headerlink" title="indexOf()：尋找字串首次出現的位置"></a>indexOf()：尋找字串首次出現的位置</h3><p>如果不包含，就回傳 -1。<br>參數中可放入兩個值：<code>indexOf(判斷的特定字串,起始位置)</code></p>
<ol>
<li>要判斷的特定字串</li>
<li>（選填）起始位置，預設為 0</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意：會區分大小寫</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line">str.indexOf(<span class="string">&quot;world&quot;</span>); <span class="comment">//6</span></span><br><span class="line">str.indexOf(<span class="string">&quot;World&quot;</span>); <span class="comment">//-1</span></span><br></pre></td></tr></table></figure>
<h3 id="lastIndexOf-：從後尋找字串首次出現的位置"><a href="#lastIndexOf-：從後尋找字串首次出現的位置" class="headerlink" title="lastIndexOf()：從後尋找字串首次出現的位置"></a>lastIndexOf()：從後尋找字串首次出現的位置</h3><p>如果不包含，就回傳 -1。<br>參數中可放入兩個值：<code>lastIndexOf(判斷的特定字串,起始位置)</code></p>
<ol>
<li>要判斷的特定字串</li>
<li>（選填）起始位置，預設為 0</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意：會區分大小寫</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello world!world!&quot;</span>;</span><br><span class="line">str.lastIndexOf(<span class="string">&quot;world&quot;</span>); <span class="comment">//12</span></span><br><span class="line">str.lastIndexOf(<span class="string">&quot;World&quot;</span>); <span class="comment">//-1</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 填入第二個參數，設定起始位置</span></span><br><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Hello world!Hello world!&quot;</span>;</span><br><span class="line">str.lastIndexOf(<span class="string">&quot;world&quot;</span>, <span class="number">10</span>);<span class="comment">//6</span></span><br></pre></td></tr></table></figure>
<h2 id="檢查字串-可與正規表達式搭配"><a href="#檢查字串-可與正規表達式搭配" class="headerlink" title="檢查字串 - 可與正規表達式搭配"></a>檢查字串 - 可與正規表達式搭配</h2><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Regular_Expressions">正規表達式</a>是被用來匹配字串中字元組合的模式，若還不清楚使用方法，可以參考<a href="https://5xruby.tw/posts/15min-regular-expression">這篇文章</a>。</p>
<h3 id="search-：尋找與字串或正規表達式相同的值"><a href="#search-：尋找與字串或正規表達式相同的值" class="headerlink" title="search()：尋找與字串或正規表達式相同的值"></a>search()：尋找與字串或正規表達式相同的值</h3><p>尋找與正規表達式相同的值，回傳字串開始的索引值，沒找到回傳 -1，參數中放入要尋找找的值。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.search(<span class="string">&quot;world&quot;</span>);<span class="comment">//6</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.search(<span class="regexp">/world/</span>);<span class="comment">//6</span></span><br></pre></td></tr></table></figure>
<h3 id="match-：尋找與字串或正規表達式相同的多個值"><a href="#match-：尋找與字串或正規表達式相同的多個值" class="headerlink" title="match()：尋找與字串或正規表達式相同的多個值"></a>match()：尋找與字串或正規表達式相同的多個值</h3><p>尋找與字串或正規表達式相同的多個值，回傳第一個成功的詳細資料，參數中放入要尋找找的值。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.match(<span class="string">&quot;world&quot;</span>);<span class="comment">//[&#x27;world&#x27;,index:6,....]</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.match(<span class="regexp">/world/</span>);<span class="comment">//[&#x27;world&#x27;,index:6,....]</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式：加上 g flag 會列出所有比對成功的字串</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.match(<span class="regexp">/world/g</span>);<span class="comment">//[&#x27;world&#x27;, &#x27;world&#x27;]</span></span><br></pre></td></tr></table></figure>
<h3 id="replace-：替換與字串或正規表達式相同的值"><a href="#replace-：替換與字串或正規表達式相同的值" class="headerlink" title="replace()：替換與字串或正規表達式相同的值"></a>replace()：替換與字串或正規表達式相同的值</h3><p>尋找與字串或正規表達式相同的值，並替換第一個值。<br>參數中放入兩個值：<code>replace(要體換掉的值,要替換上去的值)</code></p>
<ol>
<li>要替換掉的值</li>
<li>要替換上去的值</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replace(<span class="string">&quot;world&quot;</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!world!</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replace(<span class="regexp">/world/</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!world!</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式：加上 g flag 可以替換所有符合的值</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replace(<span class="regexp">/world/g</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!mavis!</span></span><br></pre></td></tr></table></figure>

<h3 id="replaceAll-：替換與字串或正規表達式相同的多個值"><a href="#replaceAll-：替換與字串或正規表達式相同的多個值" class="headerlink" title="replaceAll()：替換與字串或正規表達式相同的多個值"></a>replaceAll()：替換與字串或正規表達式相同的多個值</h3><p>尋找與字串或正規表達式相同的多個值，並替換所有值。<br>參數中放入兩個值：<code>replaceAll(要替換掉的值,要替換上去的值)</code></p>
<ol>
<li>要替換掉的值</li>
<li>要替換上去的值</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replaceAll(<span class="string">&quot;world&quot;</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!mavis!</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replaceAll(<span class="regexp">/world/</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!mavis!</span></span><br></pre></td></tr></table></figure>


<h2 id="字串與陣列"><a href="#字串與陣列" class="headerlink" title="字串與陣列"></a>字串與陣列</h2><h3 id="split-：字串分割為陣列"><a href="#split-：字串分割為陣列" class="headerlink" title="split()：字串分割為陣列"></a>split()：字串分割為陣列</h3><p>參數中可放入兩個值：<code>split(分割條件,回傳陣列最大長度)</code></p>
<ol>
<li>（選填）隔開陣列中每個元素的字串，預設不改變字串</li>
<li>（選填）回傳陣列的最大長度，預設不考慮</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.split(); <span class="comment">//[&quot;Hello!world&quot;]</span></span><br><span class="line">n = str.split(<span class="string">&quot;&quot;</span>); <span class="comment">//[&quot;H&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;,&quot;!&quot;,&quot;w&quot;,&quot;o&quot;,&quot;r&quot;,&quot;l&quot;,&quot;d&quot;]</span></span><br><span class="line">n = str.split(<span class="string">&quot;!&quot;</span>); <span class="comment">//[&quot;Hello&quot;,&quot;world&quot;]</span></span><br></pre></td></tr></table></figure>
<h3 id="join-：陣列合併為字串"><a href="#join-：陣列合併為字串" class="headerlink" title="join()：陣列合併為字串"></a>join()：陣列合併為字串</h3><p>參數可（選填）放入隔開陣列中每個元素的字串：<code>join(分割字串)</code>，預設為<code>,</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&quot;c&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;t&quot;</span>];</span><br><span class="line"><span class="keyword">let</span> n = arr.join(); <span class="comment">//&quot;c,a,t&quot;</span></span><br><span class="line">n = arr.join(<span class="string">&quot;&quot;</span>) <span class="comment">//cat</span></span><br><span class="line">n = arr.join(<span class="string">&quot;!&quot;</span>); <span class="comment">//&quot;c!a!t&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS 寬度自適應： max-width、min-width、fit-content 介紹</title>
    <url>/2021/09/21/maxwidthminwidthfitcontent/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 CSS3 中新增了幾個設置寬度屬性的關鍵字：<code>max-width</code>、<code>min-width</code>、<code>fit-content</code> 就讓我們來一一了解這些觀念吧！</p>
<p>注意：這裡的「寬度」指的是語意上的寬度，而不是 CSS 的 width，也就是說，如果文字方向是垂直的或在 flexbox 或 Grid 中，這些值也對 CSS 的 height 有效。另外，它們在 min-width、min-height、max-width、max-height 中也都是有效的。</p>
<h2 id="max-content：寬度等於內容最大寬度"><a href="#max-content：寬度等於內容最大寬度" class="headerlink" title="max-content：寬度等於內容最大寬度"></a>max-content：寬度等於內容最大寬度</h2><blockquote>
<p>The max-content sizing keyword represents the intrinsic maximum width or height of the content. For text content this means that the content will not wrap at all even if it causes overflows. –<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/max-content">MDN Web Docs</a></p>
</blockquote>
<p>max-content 表示內容固有的最大的寬度或高度，以 text 內容來說，就算會溢出（overflow）也不會換行。</p>
<p>我們可以從下面的範例中看到，當我們在 <code>item</code> 加上 <code>max-content</code> 後，文字便不會換行，做用和 <code>white-space:nowrap</code> 很相似。</p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="ZEyowRg" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/ZEyowRg">
  </a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>


<h2 id="min-content：寬度等於內容最小寬度"><a href="#min-content：寬度等於內容最小寬度" class="headerlink" title="min-content：寬度等於內容最小寬度"></a>min-content：寬度等於內容最小寬度</h2><blockquote>
<p>The smallest size a box could take that doesn’t lead to overflow that could be avoided by choosing a larger size. — <a href="https://www.w3.org/TR/css-sizing-3/#min-content">W3C</a></p>
</blockquote>
<p>min-content 表示最小不會造成溢出（overflow）的寬度。對於文字（text）內容來說，會變得與最長的單詞一樣的寬度。</p>
<p>以下面這個範例來看，我們可以看到加上了 <code>min-content</code> 的 <code>item</code> ，會以最長單字（consecteturctetur）的寬度作為 <code>item</code> 的寬度。</p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="VwWxgEW" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/VwWxgEW">
  css-max-content-demo</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p>再來我們可以查看下方這個範例，會發現未加上 <code>min-content</code> 的區塊元素 item 會繼承父成的寬度 ，而加上了 <code>min-content</code> 的 item 則以圖片的寬度做為 item 的寬度，這是因為 <code>width:100px</code> 的圖片是最小不會造成溢出（overflow）的寬度。</p>
<p class="codepen" data-height="400" data-default-tab="html,result" data-slug-hash="jOwxoRR" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/jOwxoRR">
  css-min-content-demo</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>


<h2 id="fit-content：依照內容寬度伸縮"><a href="#fit-content：依照內容寬度伸縮" class="headerlink" title="fit-content：依照內容寬度伸縮"></a>fit-content：依照內容寬度伸縮</h2><blockquote>
<p>The fit-content behaves as fit-content(stretch). In practice this means that the box will use the available space, but never more than max-content. –<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/max-content">MDN Web Docs</a></p>
</blockquote>
<p>fit-content 會讓元素使用可用空間，但不會大於 max-content。</p>
<p>在下面這個範例中可以看到，區塊元素 <code>item</code> 加上 <code>fit-content</code> 後，寬度會與內容寬度相同。</p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="dyReERp" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/dyReERp">
  css-fill-available</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p>這個特性在處理區塊水平置中上非常方便</p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="wvejVBK" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/wvejVBK">
  css-fit-content-demo</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>最後，在針對三個做個總結：</p>
<ol>
<li>max-content：寬度等於子元素最小寬度</li>
<li>min-content：寬度等於子元素最大寬度</li>
<li>fit-content：<br>如果可用空間比<code>max-content</code>大，寬度就等於 <code>max-content</code>，<br>如果可用空間比<code>max-content</code>小，寬度就等於可用空間的寬，<br>如果可用空間比<code>min-content</code>小，那麼寬度就等於 <code>min-content</code>。</li>
</ol>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://stackoverflow.com/questions/51285308/how-do-min-content-and-max-content-work">How do min-content and max-content work?</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>[資管所][MIS申論題][103中山資管]何謂互補資產？企業IT/IS的引進為何需要互補資產？...</title>
    <url>/2023/03/04/misComplementaryAsset/</url>
    <content><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><img src="https://imgur.com/pAtCmTx.jpg"></p>
<h2 id="答題"><a href="#答題" class="headerlink" title="答題"></a>答題</h2><p>一、何謂互補性資產（Complemantary Asset,CA）<br>（一）定義：能夠在各方面支援、強化「創新資產本身」，促使「創新資產成功」之資產。<br>（二）圖示：<br>    <img src="https://imgur.com/wnMYlwN.jpg" width="40%"></p>
<p>二、為何企業引進 IT/IS 需要互補資產<br>（一）前言：Leavitt 鑽石模型意涵<br>    1. 說明：組織由四個主要元素人、任務、組織結構、科技所構成，任一個元素的任何變革都會對其他元素產生直接的影響。<br>    2. 圖示<br>    <img src="https://imgur.com/GwSmJ6N.jpg" width="40%"><br>（二）說明</p>
<p>學生以上述的鑽石模型做為說明構面，並以廣達電腦導入 ERP 系統成功為例</p>
<table>
<thead>
<tr>
<th>構面（如何影響科技）</th>
<th>說明(廣達電腦)</th>
</tr>
</thead>
<tbody><tr>
<td>人-&gt;科技</td>
<td>資訊部門工作加重及需要大量跨部門溝通，員工接受與配合</td>
</tr>
<tr>
<td>組織結構-&gt;科技</td>
<td>建立組織共同的目標，加大變革動力</td>
</tr>
<tr>
<td>任務-&gt;科技</td>
<td>具有相應的企業流程</td>
</tr>
</tbody></table>
<p>三、學生認為最主要的互補資產<br>（一）IT/IS 的互補資產類型</p>
<ol>
<li>組織性資產：<br>例如：支持效率的支持性組織文化、有效率的企業流程</li>
<li>管理性資產：<br> 例如：高階主管的支持、強調團隊合作的工作環境</li>
<li>社會性資產：<br> 例如：網際網路與電信基礎建設、公平的法律、委外廠商的協助</li>
</ol>
<p>（二）最主要的IT/IS 互補資產<br>    學生以接續上述之廣達電腦導入 ERP 案例做說明</p>
<table>
<thead>
<tr>
<th>構面</th>
<th>說明</th>
</tr>
</thead>
<tbody><tr>
<td>導入前</td>
<td>管理性資產：需要高階管理員促進/激勵變革</td>
</tr>
<tr>
<td>導入中</td>
<td>社會性資產：需要合適的 ERP 系統廠商和導入顧問</td>
</tr>
<tr>
<td>導入後</td>
<td>組織性資產：持續維護所花費的成本及相關人力配置</td>
</tr>
</tbody></table>
<p>學生認為三者在缺一不可，需相互支援。</p>
]]></content>
      <categories>
        <category>資管所：MIS 申論題</category>
      </categories>
      <tags>
        <tag>MIS</tag>
        <tag>資管所</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring MVC 中使用 Kaptcha 簡易完成圖形驗證碼</title>
    <url>/2022/05/06/springKaptcha/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/RHwFh07.png"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>圖形驗證碼是驗證碼（CAPTCHA）的一種。驗證碼（CAPTCHA）是 Completely Automated Public Turing test to tell Computers and Humans Apart的縮寫，它是一種區分電腦或人類的自動程式。</p>
<p>而我們可以使用 kaptcha 來生成驗證碼，它是一個基於 SimpleCaptcha 的開源程式碼，使用它我們可以快速的生成各式各樣的驗證碼。</p>
<span id="more"></span>

<h2 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h2><ol>
<li><p>下載 kaptcha 資源<br>下載連結:<a href="https://code.google.com/archive/p/kaptcha/downloads">https://code.google.com/archive/p/kaptcha/downloads</a><br>解壓縮之後將  kaptcha-2.3.2.jar 移至專案底下(放置位置：WEB-INF&gt;lib)</p>
</li>
<li><p>配置文件<br>接著我們需要配置 kaptcha 的 servlet 還有樣式，可直接在 spring-servlet.xml 中貼上:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;captchaProducer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.google.code.kaptcha.impl.DefaultKaptcha&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;config&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.google.code.kaptcha.util.Config&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;kaptcha.image.width&quot;</span>&gt;</span>65<span class="tag">&lt;/<span class="name">prop</span>&gt;</span> //驗證碼圖片寬度</span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;kaptcha.image.height&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">prop</span>&gt;</span> // 驗證碼圖片高度</span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;kaptcha.textproducer.font.size&quot;</span>&gt;</span>25<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>// 字體大小</span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;kaptcha.textproducer.font.color&quot;</span>&gt;</span>red<span class="tag">&lt;/<span class="name">prop</span>&gt;</span> // 顏色</span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;kaptcha.textproducer.font.names&quot;</span>&gt;</span>Arial<span class="tag">&lt;/<span class="name">prop</span>&gt;</span> // 字體</span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;kaptcha.textproducer.char.length&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">prop</span>&gt;</span> // 驗證碼長度</span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;kaptcha.obscurificator.impl&quot;</span>&gt;</span>com.google.code.kaptcha.impl.ShadowGimpy<span class="tag">&lt;/<span class="name">prop</span>&gt;</span> // 驗證碼樣式引擎，預設 WaterRipple</span><br><span class="line">                    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;kaptcha.noise.impl&quot;</span>&gt;</span>com.google.code.kaptcha.impl.NoNoise<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>詳細的配置屬性如下:</p>
<table>
<thead>
<tr>
<th>配置屬性</th>
<th>敘述</th>
<th>可輸入值</th>
<th>預設值</th>
</tr>
</thead>
<tbody>
<tr>
<td>kaptcha.border</td>
<td>图片邊框</td>
<td>yes,no</td>
<td>yes</td>
</tr>
<tr>
<td>kaptcha.border.color</td>
<td>邊框顏色</td>
<td>rgb 或者 white,black,blue</td>
<td>black</td>
</tr>
<tr>
<td>kaptcha.border.thickness</td>
<td>邊框厚度</td>
<td>&gt;0</td>
<td>1</td>
</tr>
<tr>
<td>kaptcha.image.width</td>
<td>驗證碼圖片寬</td>
<td>&gt;0</td>
<td>200</td>
</tr>
<tr>
<td>kaptcha.image.height</td>
<td>驗證碼圖片高</td>
<td>&gt;0</td>
<td>50</td>
</tr>
<tr>
<td>kaptcha.producer.impl</td>
<td>驗證碼圖片實現類</td>
<td></td>
<td>com.google.code.kaptcha.impl.DefaultKaptcha</td>
</tr>
<tr>
<td>kaptcha.textproducer.impl</td>
<td>驗證碼文字實現類</td>
<td></td>
<td>com.google.code.kaptcha.text.impl.DefaultTextCreator</td>
</tr>
<tr>
<td>kaptcha.textproducer.char.string</td>
<td>驗證碼文字集合</td>
<td></td>
<td>abcde2345678gfynmnpwx</td>
</tr>
<tr>
<td>kaptcha.textproducer.char.length</td>
<td>驗證碼字元長度</td>
<td></td>
<td>5</td>
</tr>
<tr>
<td>kaptcha.textproducer.font.names</td>
<td>字體</td>
<td></td>
<td>Arial, Courier</td>
</tr>
<tr>
<td>kaptcha.textproducer.font.size</td>
<td>字體大小</td>
<td></td>
<td>40px</td>
</tr>
<tr>
<td>kaptcha.textproducer.font.color</td>
<td>字體顏色</td>
<td>r,g,b  或者 white,black,blue</td>
<td>black</td>
</tr>
<tr>
<td>kaptcha.textproducer.char.space</td>
<td>字元間隔</td>
<td></td>
<td>2</td>
</tr>
<tr>
<td>kaptcha.noise.impl</td>
<td>干擾實現類</td>
<td></td>
<td>com.google.code.kaptcha.impl.DefaultNoise</td>
</tr>
<tr>
<td>kaptcha.noise.color</td>
<td>干擾的顏色</td>
<td>r,g,b 或者 white,black,blue</td>
<td>black</td>
</tr>
<tr>
<td>kaptcha.obscurificator.impl</td>
<td>圖片樣式</td>
<td>水纹com.google.code.kaptcha.impl.WaterRipple<br>魚眼com.google.code.kaptcha.impl.FishEyeGimpy<br>陰影com.google.code.kaptcha.impl.ShadowGimpy</td>
<td>com.google.code.kaptcha.impl.WaterRipple</td>
</tr>
<tr>
<td>kaptcha.background.impl</td>
<td>背景實現類</td>
<td></td>
<td>com.google.code.kaptcha.impl.DefaultBackground</td>
</tr>
<tr>
<td>kaptcha.background.clear.from</td>
<td>背景顏色漸變，開始顏色</td>
<td></td>
<td>lightGray</td>
</tr>
<tr>
<td>kaptcha.background.clear.to</td>
<td>背景顏色漸變，結束顏色</td>
<td></td>
<td>white</td>
</tr>
<tr>
<td>kaptcha.word.impl</td>
<td>文字渲染器</td>
<td></td>
<td>com.google.code.kaptcha.text.impl.DefaultWordRenderer</td>
</tr>
<tr>
<td>kaptcha.session.key</td>
<td>session key</td>
<td></td>
<td>KAPTCHA_SESSION_KEY</td>
</tr>
<tr>
<td>kaptcha.session.date</td>
<td>session date</td>
<td></td>
<td>KAPTCHA_SESSION_DATE</td>
</tr>
</tbody>
</table>

<ol>
<li>撰寫 controller 層<br>配置好設定後，我們就可以來設定控制層，<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> controller;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UtilController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Producer verifyCodeProducer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(path = &quot;/getVerifyCodeImage&quot;, method = RequestMethod.GET)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getVerifyCodeImage</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">    response.setContentType(<span class="string">&quot;image/jpeg&quot;</span>); <span class="comment">// 設定為回傳一個 jpg 檔案</span></span><br><span class="line">    String capText = verifyCodeProducer.createText(); <span class="comment">// 建立驗證碼文字</span></span><br><span class="line">    BufferedImage bi = verifyCodeProducer.createImage(capText) ;<span class="comment">// 使用驗證碼文字建立驗證碼圖片</span></span><br><span class="line"></span><br><span class="line">    HttpSession session = request.getSession();</span><br><span class="line">    session.setAttribute(Constants.KAPTCHA_SESSION_KEY, capText);</span><br><span class="line"></span><br><span class="line">    ServletOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        out = response.getOutputStream(); <span class="comment">// 取得 ServletOutputStream 實例</span></span><br><span class="line">        ImageIO.write(bi, <span class="string">&quot;jpg&quot;</span>, out); <span class="comment">// 輸出圖片</span></span><br><span class="line">        out.flush();  <span class="comment">// 強制請求清空緩存區</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        System.out.println(e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        IOUtils.closeQuietly(out);</span><br><span class="line">    &#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>接著我們輸入:<a href="http://localhost:8080/%EF%BD%9B%E4%BD%A0%E7%9A%84%E5%B0%88%E6%A1%88%E5%90%8D%E7%A8%B1%EF%BD%9D/getVerifyCodeImage">http://localhost:8080/{你的專案名稱}/getVerifyCodeImage</a>，就可以看到我們剛剛設定好的圖片。</p>
<p><img src="https://i.imgur.com/TipFhS7.jpg"></p>
<ol start="5">
<li><p>撰寫 view 層<br>JSP 的部分</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Login.jsp --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chknumber&quot;</span>&gt;</span></span><br><span class="line">   輸入驗證碼： <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;kaptcha&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">&quot;kaptcha&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;4&quot;</span> <span class="attr">class</span>=<span class="string">&quot;chknumber_input&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/getVerifyCodeImage&quot;</span> <span class="attr">id</span>=<span class="string">&quot;kaptchaImage&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;changeCode()&quot;</span>&gt;</span>看不到嗎？點我換驗證碼<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p> JS的部分</p>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;         </span><br><span class="line">    $(<span class="string">&#x27;#kaptchaImage&#x27;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">         $(<span class="built_in">this</span>).hide().attr(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;$&#123;pageContext.request.contextPath&#125;/getVerifyCodeImage?&#x27;</span> + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>) ).fadeIn(); </span><br><span class="line">    &#125;);  </span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeCode</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line">    $(<span class="string">&#x27;#kaptchaImage&#x27;</span>).hide().attr(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;$&#123;pageContext.request.contextPath&#125;/getVerifyCodeImage?&#x27;</span> + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">100</span>) ).fadeIn();  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p> *註解：因為瀏覽器的快取會存取圖片，所以需要在request 後方加上隨機值讓他像新的請求。</p>
</li>
<li><p>取的我們設定的驗證碼<br>前面在設定驗證碼時，我們有將其存在 Session　中，所以我們在其他 Controller 中透過<code>getSession()</code> 取得剛剛設定的驗證碼字元。</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String kaptchaExpected = (String) request.getSession().getAttribute(com.google.code.kaptcha.Constants.KAPTCHA_SESSION_KEY);</span><br><span class="line">System.out.println(kaptchaExpected);</span><br></pre></td></tr></table></figure>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>關於CAPTCHA 有個有趣的小故事，設計出 CAPTCHA 的馮安將這個系統簡稱為 CAPTCHA 是因為CAPTCHA聽起來像是英文的「抓到你了」。</p>
</li>
</ol>
<h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p>kaptcha文件 - HowToUse.wiki<br><a href="https://code.google.com/archive/p/kaptcha/wikis/HowToUse.wiki">https://code.google.com/archive/p/kaptcha/wikis/HowToUse.wiki</a></p>
<p>Spring mvc框架下使用kaptcha生成驗證碼<br><a href="https://www.programminghunter.com/article/3631604970/">https://www.programminghunter.com/article/3631604970/</a></p>
<p>spring mvc 使用kaptcha配置生成驗證碼例項<br><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/310104/">https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/310104/</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java,</tag>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Validate.JS 簡易完成表單驗證功能</title>
    <url>/2022/01/09/validatejs/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/ziX6OaG.png"></p>
<h2 id="什麼是-Validate-JS"><a href="#什麼是-Validate-JS" class="headerlink" title="什麼是 Validate.JS"></a>什麼是 Validate.JS</h2><p><a href="https://validatejs.org/">Validate.JS</a> 是一個表單驗證的函式庫，使用 Validate.JS 可以讓我們方便、快速的完成表單驗證的功能！<a href="https://validatejs.org/examples.html">點擊這裡</a>可以先查看官網的簡易範例。</p>
<h2 id="如何使用-Validate-JS"><a href="#如何使用-Validate-JS" class="headerlink" title="如何使用 Validate.JS"></a>如何使用 Validate.JS</h2><h3 id="下載-Validate-JS"><a href="#下載-Validate-JS" class="headerlink" title="下載 Validate.JS"></a>下載 Validate.JS</h3><p>首先，我們可以透過不同的方式下載  Validate.JS</p>
<ol>
<li>CDN <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https//cdnjs.cloudflare.com/ajax/libs/validate.js/0.13.1/validate.min.js&quot;</span>&gt;        &lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
<li>npm <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$npm install --save validate.js</span><br><span class="line"><span class="keyword">var</span> validate = <span class="built_in">require</span>(<span class="string">&quot;validate.js&quot;</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="使用-Validate-JS-驗證欄位是否填寫"><a href="#使用-Validate-JS-驗證欄位是否填寫" class="headerlink" title="使用 Validate.JS 驗證欄位是否填寫"></a>使用 Validate.JS 驗證欄位是否填寫</h3><p>這邊先來介紹一下 validate.js 驗證器的基本格式，<br>    <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;attribute&gt;: &#123; </span><br><span class="line">&lt;validator name&gt;: &lt;validator options&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;屬性&gt;: &#123; // 屬性對應到 input 的 name</span><br><span class="line">&lt;驗證器名稱&gt;: &lt;驗證器選項&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>而帶入語法後會長這樣：<br>    <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// username 是必填欄位</span></span><br><span class="line"><span class="attr">username</span>: &#123; <span class="comment">// 屬性會對應到 input 的 name，等於選取 `&lt;input name=&quot;username&quot;&gt;`</span></span><br><span class="line">    <span class="attr">presence</span>: <span class="literal">true</span>, </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>驗證器（validator）和驗證器選項（validator options）有很多。首先，我們先練習使用 Validate.JS 幫助我們判斷欄位是否填寫，我們需要用<code>validate()</code>函示來驗證欄位，帶入的參數如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 透過驗證器（constraints）來驗證屬性（attributes），validate(屬性, 驗證器, [options]);</span></span><br><span class="line">validate(attributes, constraints, [options]);</span><br></pre></td></tr></table></figure>

<p>這裡的屬性（attributes）可以帶入<strong>物件</strong>或是<strong>表單（form）元素</strong>，如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// constraints 驗證器</span></span><br><span class="line"><span class="keyword">let</span> constraints = &#123;</span><br><span class="line">  <span class="attr">name</span>: &#123;</span><br><span class="line">    <span class="attr">presence</span>: <span class="literal">true</span> <span class="comment">// name 欄位必填</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 屬性以物件帶入</span></span><br><span class="line">validate(&#123;<span class="attr">username</span>: <span class="string">&quot;nick&quot;</span>, <span class="attr">password</span>: <span class="string">&quot;better&quot;</span>&#125;, constraints);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 屬性以 form 元素帶入</span></span><br><span class="line"><span class="keyword">const</span> form = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#form&quot;</span>);</span><br><span class="line">validate(form, constraints);</span><br></pre></td></tr></table></figure>

<p><code>validate()</code> 執行後，驗證屬性，回傳錯誤訊息（如果沒有錯誤就不會回傳任何結果）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> constraints = &#123;</span><br><span class="line">  <span class="attr">name</span>: &#123;</span><br><span class="line">    <span class="attr">presence</span>: <span class="literal">true</span> <span class="comment">// name 欄位必填</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//驗證正確，回傳 undefined</span></span><br><span class="line">validate(&#123;<span class="attr">name</span>: <span class="string">&quot;nick&quot;</span>&#125;, constraints);</span><br><span class="line"></span><br><span class="line"><span class="comment">//驗證錯誤，回傳 &#123;&quot;name&quot;:[&quot;Name can&#x27;t be blank&quot;]&#125;</span></span><br><span class="line">validate(&#123;<span class="attr">name</span>: <span class="string">&quot;&quot;</span>&#125;, constraints);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：<br>validate({}, from: {email: true});// 驗證正確，回傳undefined</p>
<p>原因是， null 和 undefined 是合法的值，所以如果不希望使用者輸入空的值，就要記得加上 presence: true。</p>
</blockquote>
<p>了解了 <code>validate()</code> 的用法後，就可以搭配 form 標單寫成如下：</p>
<p class="codepen" data-height="300" data-default-tab="js,result" data-slug-hash="LYzJWyx" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/LYzJWyx">
  validate.js  範例一</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p>送出空白欄位後，我們就可以在 console 面板看到回傳錯誤提示物件（若欄位填寫正確則會回傳 undefined。）：<br><img src="https://i.imgur.com/97dJi4d.png"></p>
<h3 id="使用-Validate-JS-驗證欄位各種情境"><a href="#使用-Validate-JS-驗證欄位各種情境" class="headerlink" title="使用 Validate.JS 驗證欄位各種情境"></a>使用 Validate.JS 驗證欄位各種情境</h3><p>除了驗證欄位是否填寫以外，Validate.JS 還包含了以下不同種的驗證：</p>
<p><strong>1. datetime</strong></p>
<p>datetime 可以用來驗證日期和時間。</p>
<p>在使用此驗證器之前，我們需要設置 parse 和 format 函數，<br>以及載入 moment.js(<a href="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js">https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js</a>)</p>
<blockquote>
<p>moment.js 是一切和時間有關的的解析、轉換、設置、格式化日期的 JavaScript 函式庫</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">validate.extend(validate.validators.datetime, &#123;</span><br><span class="line">  <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value, options</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> +moment.utc(value);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">format</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value, options</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> format = options.dateOnly ? <span class="string">&quot;YYYY-MM-DD&quot;</span> : <span class="string">&quot;YYYY-MM-DD hh:mm:ss&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> moment.utc(value).format(format);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>之後就可以使用 <code>datetime: true</code> 判斷是否符合格式 YYYY-MM-DD 或 YYYY-MM-DD hh:mm:ss，另外，也可以加上 <code>dateOnly: true</code> 限制只判斷格式是否符合 YYYY-MM-DD</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">validate(&#123;<span class="attr">departure</span>: <span class="string">&quot;2013-12-11 10:09:08&quot;</span>&#125;, &#123;<span class="attr">departure</span>: &#123;<span class="attr">datetime</span>: <span class="literal">true</span>&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，回傳 undefined</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">departure</span>: <span class="string">&quot;2013-12-11 10:09:08&quot;</span>&#125;, &#123;<span class="attr">departure</span>: &#123;<span class="attr">datetime</span>: &#123;<span class="attr">dateOnly</span>: <span class="literal">true</span>&#125;&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;departure&quot;: [&quot;Departure must be valid date&quot;]&#125;</span></span><br></pre></td></tr></table></figure>

<p>我們也可以搭配 <a href="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js">moment.js</a> 和 latest（日期前）與 earliest（日期後） 做年齡的判斷</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> constraints = &#123;</span><br><span class="line">  <span class="attr">birthday</span>: &#123;</span><br><span class="line">    <span class="attr">datetime</span>: &#123;</span><br><span class="line">      <span class="attr">dateOnly</span>: <span class="literal">true</span>, <span class="comment">// 確認是否符合有效格式 YYYY-MM-DD</span></span><br><span class="line">      <span class="attr">latest</span>: moment.utc().subtract(<span class="number">18</span>, <span class="string">&#x27;years&#x27;</span>), <span class="comment">//年齡必須在 18 歲以上</span></span><br><span class="line">      <span class="attr">message</span>: <span class="string">&quot;^You need to be at least 18 years old&quot;</span> <span class="comment">// 回傳的錯誤訊息</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">validate(&#123;<span class="attr">birthday</span>: <span class="string">&quot;3013-11-14&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// &#123;&quot;birthday&quot;: [&quot;You need to be at least 18 years old&quot;]&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>2. email</strong></p>
<p>email 可以判斷信箱是否為有效格式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> constraints = &#123;</span><br><span class="line">  <span class="attr">from</span>: &#123;</span><br><span class="line">    <span class="attr">email</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">from</span>: <span class="string">&quot;nicklas@ansman&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;email&quot;: [&quot;From is not a valid email&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Upper cased emails are allowed</span></span><br><span class="line">validate(&#123;<span class="attr">from</span>: <span class="string">&quot;NICKLAS@ANSMAN.SE&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，回傳 undefined</span></span><br></pre></td></tr></table></figure>

<p>email 一樣也可以透過 message 回傳錯誤訊息，如果希望 messsage 省略預設的屬性名稱（form）可以加上 ^ 寫成 “^doesn’t look like a valid email”。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">constraints = &#123;</span><br><span class="line">  <span class="attr">from</span>: &#123;</span><br><span class="line">    <span class="attr">email</span>: &#123;</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&quot;doesn&#x27;t look like a valid email&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">from</span>: <span class="string">&quot;foobar&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;email&quot;: [&quot;From doesn&#x27;t look like a valid email&quot;]&#125;</span></span><br></pre></td></tr></table></figure>
<p><strong>3.equality</strong><br>equality 可用來驗證屬性是否等於另一個屬性，常使用在設定密碼時的密碼確認。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> constraints = &#123;</span><br><span class="line">  <span class="attr">confirmPassword</span>: &#123;</span><br><span class="line">    <span class="attr">equality</span>: <span class="string">&quot;password&quot;</span> <span class="comment">//要判斷是否相同的對屬性</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">password</span>: <span class="string">&quot;foo&quot;</span>, <span class="attr">confirmPassword</span>: <span class="string">&quot;foo&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，回傳 undefined</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">password</span>: <span class="string">&quot;foo&quot;</span>, <span class="attr">confirmPassword</span>: <span class="string">&quot;bar&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; &#123;confirmPassword: [&quot;Confirm password is not equal to password&quot;]&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>4.exclusion</strong><br>Exclusion 可用來驗證值是否在特定陣列中，如果在陣列中就排除</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> restrictedDomains = ;</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">subdomain</span>: <span class="string">&quot;tw&quot;</span>&#125;, &#123;<span class="attr">subdomain</span>: &#123;<span class="attr">exclusion</span>: [<span class="string">&quot;jp&quot;</span>, <span class="string">&quot;ch&quot;</span>]&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，回傳undefined</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">subdomain</span>: <span class="string">&quot;jp&quot;</span>&#125;, &#123;<span class="attr">subdomain</span>: &#123;<span class="attr">exclusion</span>: [<span class="string">&quot;jp&quot;</span>, <span class="string">&quot;ch&quot;</span>]&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;size&quot;: [&quot;jp is restricted&quot;]&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>我們也可以使用 within 搭配 ${value} </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> constraints = &#123;</span><br><span class="line">  <span class="attr">subdomain</span>: &#123;</span><br><span class="line">    <span class="attr">exclusion</span>: &#123;</span><br><span class="line">      <span class="attr">within</span>: &#123;<span class="attr">jp</span>: <span class="string">&quot;Japan&quot;</span>, <span class="attr">ch</span>: <span class="string">&quot;China&quot;</span>&#125;,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&quot;^We don&#x27;t support %&#123;value&#125; right now, sorry&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">subdomain</span>: <span class="string">&quot;jp&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;subdomain&quot;: [&quot;We don&#x27;t support Japan right now, sorry&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">subdomain</span>: <span class="string">&quot;com&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，undefined</span></span><br></pre></td></tr></table></figure>

<p><strong>5.inclusion</strong><br>Inclusion 可用來驗證值是否在特定陣列中，如果不在陣列中就排除</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> sizes = [<span class="string">&quot;small&quot;</span>, <span class="string">&quot;medium&quot;</span>, <span class="string">&quot;large&quot;</span>];</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="string">&quot;small&quot;</span>&#125;, &#123;<span class="attr">size</span>: &#123;<span class="attr">inclusion</span>: sizes&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; undefined</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">size</span>: <span class="string">&quot;xlarge&quot;</span>&#125;, &#123;<span class="attr">size</span>: &#123;<span class="attr">inclusion</span>: sizes&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;size&quot;: [&quot;xlarge is not included in the list&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> constraints = &#123;</span><br><span class="line">  <span class="attr">size</span>: &#123;</span><br><span class="line">    <span class="attr">inclusion</span>: &#123;</span><br><span class="line">      <span class="attr">within</span>: &#123;<span class="string">&quot;Small&quot;</span>: <span class="string">&quot;s&quot;</span>, <span class="string">&quot;Medium&quot;</span>: <span class="string">&quot;m&quot;</span>, <span class="string">&quot;Large&quot;</span>: <span class="string">&quot;l&quot;</span>&#125;,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&quot;^We&#x27;re currently out of %&#123;value&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">size</span>: <span class="string">&quot;Extra large&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;size&quot;: [&quot;We&#x27;re currently out of Extra large&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">size</span>: <span class="string">&quot;Medium&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，回傳 undefined</span></span><br></pre></td></tr></table></figure>
<p><strong>6.format</strong><br>format 可以使用正規表達式驗證欄位是否符合，Validate.JS 沒有提供的格式（如：郵遞區號），就可以使用 format 做驗證</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> pattern = <span class="regexp">/\d&#123;5&#125;(-\d&#123;4&#125;)?/</span>;</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">zipCode</span>: <span class="string">&quot;foobar&quot;</span>&#125;, &#123;<span class="attr">zipCode</span>: &#123;<span class="attr">format</span>: pattern&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;zipCode&quot;: [&quot;Zip code is invalid&quot;]&#125;;</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">zipCode</span>: <span class="string">&quot;12345&quot;</span>&#125;, &#123;<span class="attr">zipCode</span>: &#123;<span class="attr">format</span>: pattern&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，回傳 undefined</span></span><br></pre></td></tr></table></figure>
<p>如果需要使用到 flags 需要再另外加上</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> constraints = &#123;</span><br><span class="line">  <span class="attr">username</span>: &#123;</span><br><span class="line">    <span class="attr">format</span>: &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="string">&quot;[a-z0-9]+&quot;</span>,</span><br><span class="line">      <span class="attr">flags</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&quot;can only contain a-z and 0-9&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">username</span>: <span class="string">&quot;Nicklas!&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;username&quot;: [&quot;Username can only contain a-z and 0-9&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">username</span>: <span class="string">&quot;Nicklas&quot;</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，回傳 undefined</span></span><br></pre></td></tr></table></figure>

<p><strong>7.length</strong></p>
<p>length 可以用來判斷是否符合長度，is 代表等於，代表小於，代表大於，也可使用<br> tooShort、tooLong、notValid 和 wrongLength 修改預設錯誤訊息</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> constraints = &#123;</span><br><span class="line">  <span class="attr">key1</span>: &#123;<span class="attr">length</span>: &#123;<span class="attr">is</span>: <span class="number">3</span>&#125;&#125;, <span class="comment">// 長度等於 3</span></span><br><span class="line">  <span class="attr">key2</span>: &#123;<span class="attr">length</span>: &#123;<span class="attr">minimum</span>: <span class="number">20</span>&#125;&#125;, <span class="comment">// 長度小於 20</span></span><br><span class="line">  <span class="attr">key3</span>: &#123;<span class="attr">length</span>: &#123;<span class="attr">maximum</span>: <span class="number">3</span>&#125;&#125;, <span class="comment">// 長度大於 3</span></span><br><span class="line">  <span class="attr">key4</span>: &#123;</span><br><span class="line">    <span class="attr">length</span>: &#123;</span><br><span class="line">      <span class="attr">minimum</span>: <span class="number">3</span>, </span><br><span class="line">      <span class="attr">tooShort</span>: <span class="string">&quot;needs to have %&#123;count&#125; words or more&quot;</span>, </span><br><span class="line">      <span class="attr">tokenizer</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value.split(<span class="regexp">/\s+/g</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">validate(&#123;&#125;, constraints);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> values = &#123;</span><br><span class="line">  <span class="attr">key1</span>: <span class="string">&quot;wrong length&quot;</span>,</span><br><span class="line">  <span class="attr">key2</span>: <span class="string">&quot;too short&quot;</span>,</span><br><span class="line">  <span class="attr">key3</span>: <span class="string">&quot;too long&quot;</span>,</span><br><span class="line">  <span class="attr">key4</span>: <span class="string">&quot;too short&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line">validate(values, constraints);</span><br><span class="line"><span class="comment">// =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   &quot;key1&quot;: [&quot;Key1 is the wrong length (should be 3 characters)&quot;],</span></span><br><span class="line"><span class="comment">//   &quot;key2&quot;: [&quot;Key2 is too short (minimum is 20 characters)&quot;],</span></span><br><span class="line"><span class="comment">//   &quot;key3&quot;: [&quot;Key3 is too long (maximum is 3 characters)&quot;],</span></span><br><span class="line"><span class="comment">//   &quot;key4&quot;: [&quot;Key4 needs to have 3 words or more&quot;]</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>8.numericality</strong></p>
<p>numericality可以判斷是否只填入數字，沒有填入其他型態的內容。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">validate(&#123;<span class="attr">duration</span>: <span class="string">&quot;foobar&quot;</span>&#125;, &#123;<span class="attr">duration</span>: &#123;<span class="attr">numericality</span>: <span class="literal">true</span>&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;duration&quot;: [&quot;Duration is not a number&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">duration</span>: <span class="string">&quot;3&quot;</span>&#125;, &#123;<span class="attr">duration</span>: &#123;<span class="attr">numericality</span>: <span class="literal">true</span>&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，回傳 undefined</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">duration</span>: <span class="string">&quot;03&quot;</span>&#125;, &#123;<span class="attr">duration</span>: &#123;<span class="attr">numericality</span>: <span class="literal">true</span>&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; 驗證正確，回傳 undefined</span></span><br></pre></td></tr></table></figure>
<p>strict：數字不可以0作為開頭</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">validate(&#123;<span class="attr">duration</span>: <span class="string">&quot;03&quot;</span>&#125;, &#123;<span class="attr">duration</span>: &#123;<span class="attr">numericality</span>: &#123;<span class="attr">strict</span>: <span class="literal">true</span>&#125;&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;duration&quot;: [&quot;Duration must be a valid number&quot;]&#125;</span></span><br></pre></td></tr></table></figure>
<p>noStrings：數字不可以0作為開頭</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">validate(&#123;<span class="attr">duration</span>: <span class="string">&quot;3&quot;</span>&#125;, &#123;<span class="attr">duration</span>: &#123;<span class="attr">numericality</span>: &#123;<span class="attr">noStrings</span>: <span class="literal">true</span>&#125;&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;duration&quot;: [&quot;Duration is not a number&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">duration</span>: <span class="number">3</span>&#125;, &#123;<span class="attr">duration</span>: &#123;<span class="attr">numericality</span>: &#123;<span class="attr">noStrings</span>: <span class="literal">true</span>&#125;&#125;&#125;)</span><br><span class="line"><span class="comment">// 驗證正確，回傳 undefined</span></span><br></pre></td></tr></table></figure>
<p>noStrings：數字可以整除數字 n</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">validate(&#123;<span class="attr">duration</span>: <span class="string">&quot;7&quot;</span>&#125;, &#123;<span class="attr">duration</span>: &#123;<span class="attr">numericality</span>: &#123;<span class="attr">divisibleBy</span>: <span class="number">3</span>&#125;&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;duration&quot;: [&quot;Duration must be divisible by 3&quot;]&#125;</span></span><br></pre></td></tr></table></figure>

<p>還有其他不同的設定：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> constraints = &#123;</span><br><span class="line">  <span class="attr">duration</span>: &#123;</span><br><span class="line">    <span class="attr">numericality</span>: &#123;</span><br><span class="line">      <span class="attr">onlyInteger</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">greaterThan</span>: <span class="number">0</span>, <span class="comment">// 大於 0</span></span><br><span class="line">      <span class="attr">lessThanOrEqualTo</span>: <span class="number">30</span>, <span class="comment">// 小於或等於 30</span></span><br><span class="line">      <span class="attr">even</span>: <span class="literal">true</span>, <span class="comment">//偶數</span></span><br><span class="line">      <span class="attr">notEven</span>: <span class="string">&quot;must be evenly divisible by two&quot;</span> <span class="comment">// 非偶數回傳的錯誤訊息</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">duration</span>: <span class="number">3.14</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;duration&quot;: [&quot;Duration must be an integer&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">duration</span>: <span class="number">4711</span>&#125;, constraints);</span><br><span class="line"><span class="comment">// =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   &quot;duration&quot;: [</span></span><br><span class="line"><span class="comment">//     &quot;Duration must be less than or equal to 30&quot;,</span></span><br><span class="line"><span class="comment">//     &quot;Duration must be evenly divisible by two&quot;</span></span><br><span class="line"><span class="comment">//   ]</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure>
<p><strong>9.url</strong></p>
<p>url 可以判斷網址是否有效。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">validate(&#123;<span class="attr">website</span>: <span class="string">&quot;http://google.com&quot;</span>&#125;, &#123;<span class="attr">website</span>: &#123;<span class="attr">url</span>: <span class="literal">true</span>&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; undefined</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">website</span>: <span class="string">&quot;google.com&quot;</span>&#125;, &#123;<span class="attr">website</span>: &#123;<span class="attr">url</span>: <span class="literal">true</span>&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;website&quot;: [&quot;Website is not a valid url&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">website</span>: <span class="string">&quot;ftp://google.com&quot;</span>&#125;, &#123;<span class="attr">website</span>: &#123;<span class="attr">url</span>: <span class="literal">true</span>&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;website&quot;: [&quot;Website is not a valid url&quot;]&#125;</span></span><br></pre></td></tr></table></figure>
<p>schemes ：允許的 schemes，預設為 [“http”, “https”]。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">validate(&#123;<span class="attr">website</span>: <span class="string">&quot;ftp://google.com&quot;</span>&#125;, &#123;</span><br><span class="line">  <span class="attr">website</span>: &#123;</span><br><span class="line">    <span class="attr">url</span>: &#123;</span><br><span class="line">      <span class="attr">schemes</span>: [<span class="string">&quot;ftp&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// =&gt; undefined</span></span><br></pre></td></tr></table></figure>

<p>allowLocal：允許 local 主機名稱，如：10.0.1.1 或 localhost。預設為 false</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">validate(&#123;<span class="attr">website</span>: <span class="string">&quot;http://localhost&quot;</span>&#125;, &#123;<span class="attr">website</span>: &#123;<span class="attr">url</span>: <span class="literal">true</span>&#125;&#125;);</span><br><span class="line"><span class="comment">// =&gt; &#123;&quot;website&quot;: [&quot;Website is not a valid url&quot;]&#125;</span></span><br><span class="line"></span><br><span class="line">validate(&#123;<span class="attr">website</span>: <span class="string">&quot;http://localhost&quot;</span>&#125;, &#123;</span><br><span class="line">  <span class="attr">website</span>: &#123;</span><br><span class="line">    <span class="attr">url</span>: &#123;</span><br><span class="line">      <span class="attr">allowLocal</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// =&gt; undefined</span></span><br></pre></td></tr></table></figure>
<h3 id="回傳結果給使用者"><a href="#回傳結果給使用者" class="headerlink" title="回傳結果給使用者"></a>回傳結果給使用者</h3><p>前面我們已經了解到如何使用 Validate.js 做驗證，但只在 console 面板顯示錯誤提示，無法真正提醒使用者。我們可以透過點擊送出按鈕後隱藏、顯示文字來提醒使用者，例如：</p>
<p class="codepen" data-height="300" data-default-tab="js,result" data-slug-hash="yLzxMRy" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/yLzxMRy">
  validate.js  範例二</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>


<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://validatejs.org/">Validate.JS 官網</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC 中透過 MultipartFile 實現上傳圖片以及瀏覽圖片</title>
    <url>/2022/05/06/springUploadImage/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://i.imgur.com/MVsF1h9.png"></p>
<h2 id="配置資源"><a href="#配置資源" class="headerlink" title="配置資源"></a>配置資源</h2><p>由於 Spring 的 CommonsMultipartResolver 依賴Apache Commons FileUpload 函式庫，Apache Commons FileUpload 依賴於Apache Commons IO，所以在開始實作前我們必須先將這兩個函式庫匯入專案中。</p>
<p>檢查 web&gt;lib 是否有以下兩個資源:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">commons-fileupload-1.2.2.jar</span><br><span class="line">commons-io-2.1.jar</span><br></pre></td></tr></table></figure>

<p>接著，由於SpringMVC 使用 MultipartFile 來進行檔案上傳，所以我們要在 spring-servlet.xml 配置 MultipartResolve:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 單位bytes--&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20971520&quot;</span> /&gt;</span> <span class="comment">&lt;!-- 20MB --&gt;</span><span class="comment">&lt;!-- 全部檔案最大上上傳大小, -1代表不限制 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSizePerFile&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5242880&quot;</span>/&gt;</span> <span class="comment">&lt;!-- 5MB --&gt;</span><span class="comment">&lt;!-- 每個檔案最大上傳大小, -1代表不限制 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxInMemorySize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1048576&quot;</span> /&gt;</span> <span class="comment">&lt;!-- 1MB --&gt;</span><span class="comment">&lt;!-- 檔案上傳最大的暫存記憶體大小,預設為10240 bytes(1KB) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><em>若沒有配置會出現以下錯誤:<br>java.lang.IllegalStateException: Unable to process parts as no multi-part configuration has been provided</em></p>
<h2 id="程式碼實作-上傳圖片"><a href="#程式碼實作-上傳圖片" class="headerlink" title="程式碼實作 - 上傳圖片"></a>程式碼實作 - 上傳圖片</h2><h3 id="建立資料表"><a href="#建立資料表" class="headerlink" title="建立資料表"></a>建立資料表</h3><p>在 SQL Server 中建立存放圖片的資料表（其他資料庫的語法可能不太一樣要注意一下）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Image(</span><br><span class="line">	[id] [<span class="type">nchar</span>](<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">	[data] [<span class="type">varbinary</span>](max) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">) </span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/GrgI8g2.png"></p>
<h3 id="上傳圖片-前端"><a href="#上傳圖片-前端" class="headerlink" title="上傳圖片:前端"></a>上傳圖片:前端</h3><p>前端畫面的 form 表單記得需要加上 multipart/form-data，它是屬於 Content-Type 的其中之一，可以避免對字元編碼（Encoding），直接傳送二進位資料到後端。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;form&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;image-input&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;image/jpeg, image/png, image/jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;form-btn&quot;</span>&gt;</span></span><br><span class="line">        上傳圖片</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>這裡我們使用 jQuery AJAX 去向後端發送我們上傳的圖片</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;#form-btn&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">let</span> formData = <span class="keyword">new</span> FormData($(<span class="string">&quot;#form&quot;</span>)[<span class="number">0</span>]);</span><br><span class="line">	formData.append(<span class="string">&quot;file&quot;</span>,$(<span class="string">&quot;#form&quot;</span>)[<span class="number">0</span>])</span><br><span class="line">	$.ajax(&#123;</span><br><span class="line">		<span class="attr">type</span> : <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">		<span class="attr">url</span> : <span class="string">&#x27;uploadImage&#x27;</span>,</span><br><span class="line">		<span class="attr">processData</span>:<span class="literal">false</span>,</span><br><span class="line">		<span class="attr">contentType</span> : <span class="literal">false</span>,</span><br><span class="line">		<span class="attr">data</span> :formData,</span><br><span class="line">		<span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">rs</span>)</span>&#123;</span><br><span class="line">			<span class="built_in">console</span>.log(rs)</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="attr">error</span> : <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">			<span class="built_in">console</span>.log(e)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


<h3 id="上傳圖片-後端"><a href="#上傳圖片-後端" class="headerlink" title="上傳圖片:後端"></a>上傳圖片:後端</h3><p>後端使用 MultipartFile 來接收檔案，它包含二進位資料和檔案名稱，接收到檔案後再透過 getInputStream() 轉換成 inputStream。</p>
<p>這裡我們使用 BufferedInputStream 創建了一個輸入流。這是因為 InputStream 是一個抽像類，我們不能直接創建InputStream的物件。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/uploadImage&quot;,method=RequestMethod.POST)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">multipartResolver</span><span class="params">(<span class="meta">@RequestParam(value=&quot;file&quot;)</span> MultipartFile file)</span> </span>&#123;</span><br><span class="line">		InputStream stream = <span class="keyword">new</span> BufferedInputStream(file.getInputStream());</span><br><span class="line">		String result = util.uploadImage(stream);</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 Dao 中將剛剛取得到的 inputStream 輸入我們的資料表中。這裡我使用 UUID 建立 id，如果有別的需求也可以自行修改。成功新增後，後端會回傳新增的圖片id，而我們可以在前面的 AJAX success 中接收到它。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UtilDao</span> </span>&#123;</span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">uploadImage</span><span class="params">(InputStream stream)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			String sql = <span class="string">&quot;insert into Image(id,data) OUTPUT INSERTED.ID values(?,?)&quot;</span>;</span><br><span class="line">			String id = getUUID();</span><br><span class="line">			<span class="keyword">return</span> jdbcTemplate.queryForObject(sql, <span class="keyword">new</span> Object[] &#123; id, stream &#125;, String.class);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			System.out.println(e);</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getUUID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		String uuid = UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> uuid;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="程式碼實作-瀏覽圖片"><a href="#程式碼實作-瀏覽圖片" class="headerlink" title="程式碼實作 - 瀏覽圖片"></a>程式碼實作 - 瀏覽圖片</h2><h3 id="瀏覽圖片-前端"><a href="#瀏覽圖片-前端" class="headerlink" title="瀏覽圖片:前端"></a>瀏覽圖片:前端</h3><p>前面我們已經成功將圖片存進資料庫，接著就要來嘗試顯示出我們加入的圖片。在前端我們可以透過 GET 加上 URL 中的 id 參數來顯示對應的圖片:<code>http://localhost:8080/專案名稱/getImage?id=???</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img src=&quot;/getImage?id=baa2d08bd84340faa1b2&quot;&gt;</span><br></pre></td></tr></table></figure>
<h3 id="瀏覽圖片-後端"><a href="#瀏覽圖片-後端" class="headerlink" title="瀏覽圖片:後端"></a>瀏覽圖片:後端</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/getImage&quot;,method=RequestMethod.GET)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getDBImage</span><span class="params">(<span class="meta">@RequestParam(value=&quot;id&quot;)</span> String id,HttpServletRequest  request,HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] data = util.getImage(id);</span><br><span class="line">        response.setContentType(<span class="string">&quot;image/png&quot;</span>); <span class="comment">// 設定為回傳一個 png 檔案</span></span><br><span class="line">        ByteArrayInputStream bis = <span class="keyword">new</span> ByteArrayInputStream(data);</span><br><span class="line">        BufferedImage bImage = ImageIO.read(bis); <span class="comment">//  //讀取影象到影象緩衝區</span></span><br><span class="line">        ServletOutputStream out = response.getOutputStream(); <span class="comment">// 取得 ServletOutputStream 實例</span></span><br><span class="line">        ImageIO.write(bImage, <span class="string">&quot;png&quot;</span>, out);</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">        <span class="comment">// 錯誤處理</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">byte</span>[] getImage(String id) &#123;</span><br><span class="line">        String sql = <span class="string">&quot;select data from Image where id =?&quot;</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] data = jdbcTemplate.queryForObject(sql, <span class="keyword">new</span> Object[] &#123; id &#125;, <span class="keyword">byte</span>[].class);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p>Spring MVC 上傳檔案 java.lang.IllegalStateException: Unable to process parts as no multi-part configuration has been provided<br><a href="https://matthung0807.blogspot.com/2018/03/spring-mvc-javalangillegalstateexceptio.html">https://matthung0807.blogspot.com/2018/03/spring-mvc-javalangillegalstateexceptio.html</a></p>
<p>HTML:Form表單標籤的Enctype屬性的作用及應用示例介紹<br><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/544448/">https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/544448/</a></p>
<p>Upload and Download Files with JDBC to SQL Servers<br><a href="https://www.codeproject.com/Articles/872109/Upload-and-Download-Files-with-JDBC-to-SQL-Servers">https://www.codeproject.com/Articles/872109/Upload-and-Download-Files-with-JDBC-to-SQL-Servers</a></p>
<p>使用CommonsMultipartFile获取ajax上传的文件<br><a href="https://blog.csdn.net/qq_34377830/article/details/88045561">https://blog.csdn.net/qq_34377830/article/details/88045561</a></p>
<p>使用ajax，Jquery，Spring Boot，MultipartFile實現檔案上傳功能<br><a href="https://www.796t.com/content/1547351102.html">https://www.796t.com/content/1547351102.html</a></p>
<p>JavaWeb(實現文件上傳)（一）<br><a href="https://www.796t.com/content/1513886170.html">https://www.796t.com/content/1513886170.html</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java,</tag>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue - 使用 v-cloak 隱藏未編譯的程式碼</title>
    <url>/2022/01/30/vue3-vcloak/</url>
    <content><![CDATA[<p>當我們使用 Vue 時，如果網路速度慢，Vue 未載入完成，還沒經 Vue 解析的內容就會渲染到頁面上。這時我們可以使用 v-cloak 隱藏未編譯的 <code>&#123;&#123;&#125;&#125;</code> 標籤。</p>
<p>範例中我們使用 <code>setTimeout</code> 來模擬網速慢的情境。可以看到在編譯結束前並不會顯示第一個有加上 v-cloak 的 <code>div</code>。</p>
<iframe height="300" style="width: 100%;" scrolling="no" title="vee-validate 範例" src="https://codepen.io/0430shinyu/embed/preview/oNojPXM?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">
  See the Pen <a href="https://codepen.io/0430shinyu/pen/oNojPXM">
  vee-validate 範例</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.
</iframe>

<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://v3.cn.vuejs.org/api/directives.html#v-cloak">Vue3 官方文件</a></p>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>[資管所][MIS申論題]申論題練習題整理</title>
    <url>/2023/03/10/misProposalCollect/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在準備資管研究所時，練習了一些資訊管理導論 MIS 的申論題，以下整理了過去練習過的題目，希望可以提供給需要的考生做參考。</p>
<h3 id="台大"><a href="#台大" class="headerlink" title="台大"></a>台大</h3><h3 id="政大"><a href="#政大" class="headerlink" title="政大"></a>政大</h3><h3 id="中山"><a href="#中山" class="headerlink" title="中山"></a>中山</h3><p><em>103</em><br><a href="">5.互補資產</a></p>
<h2 id="交大"><a href="#交大" class="headerlink" title="交大"></a>交大</h2><p><em>103</em><br><a href="">資訊系統比較</a></p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3>]]></content>
      <categories>
        <category>資管所：MIS 申論題</category>
      </categories>
      <tags>
        <tag>MIS</tag>
        <tag>資管所</tag>
      </tags>
  </entry>
  <entry>
    <title>[資管所][MIS申論題][103交大資管]以 Simon IDC 模型做資訊系統的比較</title>
    <url>/2023/03/10/misSimonIDC/</url>
    <content><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>採用資訊科技主要的目的之一為協助人們進行決策，以期得更好的結果。請針對 Simon(1960)所提出的 IDC 模式來討論資訊科技可以協助決策的過程，進而提升決策的成果。請比較並討論下列的資訊系統：DSS、GSS、EIS。(25%)</p>
<h2 id="答題"><a href="#答題" class="headerlink" title="答題"></a>答題</h2><p>一、三者如何支援決策<br>（一）DSS 支援 IDC 模型<br>(1) I（Intelligence 情報）：無法支援<br>(2) D（Design 設計）：DSS 的「目標尋找分析模式」可支援分析如果要達到特定目標需投入多少輸入<br>(3) C（Choice 選擇）：<br>    a. DSS 的「敏感度分析模式」可比較自變數改變後，應變數的變化<br>    b. DSS 的「模式模擬分析」可進入大量模擬測驗，以預測在不同環境下系統所能產生的結果</p>
<p>（二） GDSS 支援 IDC<br>(1) I（Intelligence 情報）：無法支援<br>(2) D（Design 設計）：GDSS 的「平行溝通」以及「匿名性」能增加更多設計階段的意見輸入，而「群體記憶」和「過程結構」可提升討論效率<br>(3) C（Choice 選擇）：上述特性也可促進方案的選擇</p>
<p>（三）EIS 支援  IDC 模型<br>(1) I（Intelligence 情報）：透過趨勢圖發現問題點<br>(2) D（Design 設計）：無法支援，因高階主管的問題結構化程度低依賴直覺，對設計方法較無幫助<br>(3) C（Choice 選擇）：無法支援，原因同上</p>
<p>二、比較三個系統</p>
<p>（一）以組織階層比較 EIS、DSS</p>
<table>
<thead>
<tr>
<th>資訊系統</th>
<th>DSS</th>
<th>ESS</th>
</tr>
</thead>
<tbody><tr>
<td>使用者</td>
<td>中階管理者</td>
<td>高階管理者</td>
</tr>
<tr>
<td>決策問題</td>
<td>半結構化</td>
<td>非結構化</td>
</tr>
</tbody></table>
<p>（二）以決策人數比較 DSS、GDSS</p>
<table>
<thead>
<tr>
<th>資訊系統</th>
<th>DSS</th>
<th>ESS</th>
</tr>
</thead>
<tbody><tr>
<td>使用者</td>
<td>個人</td>
<td>群體</td>
</tr>
<tr>
<td>決策問題</td>
<td>半結構化</td>
<td>非結構化</td>
</tr>
</tbody></table>
<hr>
<h2 id="補充說明"><a href="#補充說明" class="headerlink" title="補充說明"></a>補充說明</h2><ol>
<li><p>不建議使用以下寫法，因為 IDC 模型的決策者需要是同一個人<br>（一）I：可支援 DSS、EIS<br>（二）D：可支援 DSS、GSS<br>（三）C：可支援 DSS、GSS</p>
</li>
<li><p>不建議使用以下寫法，三者分類標準不同<br>（一）DSS vs EIS vs GSS</p>
</li>
</ol>
]]></content>
      <categories>
        <category>資管所：MIS 申論題</category>
      </categories>
      <tags>
        <tag>MIS</tag>
        <tag>資管所</tag>
      </tags>
  </entry>
</search>
