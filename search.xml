<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS Filter 濾鏡效果</title>
    <url>/2021/09/18/cssfilter/</url>
    <content><![CDATA[<p>我們可以使用 CSS Filter 直接在元素上加上濾鏡效果，<br>先來個所有濾鏡效果的呈現 DEMO：</p>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="gOReYWK" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/gOReYWK">
  </a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h2 id="10-種-filter-濾鏡效果"><a href="#10-種-filter-濾鏡效果" class="headerlink" title="10 種 filter 濾鏡效果"></a>10 種 filter 濾鏡效果</h2><p>filter 效果一共有 10 種，其中最常使用的是第 1 個 <code>blur()</code> 和第 8 個的 <code>opacity()</code>。</p>
<h3 id="1-blur-模糊效果"><a href="#1-blur-模糊效果" class="headerlink" title="1. blur() 模糊效果"></a>1. blur() 模糊效果</h3><p>函示內放入模糊的程度，值越大越模糊</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-brightness-調整亮度"><a href="#2-brightness-調整亮度" class="headerlink" title="2. brightness() 調整亮度"></a>2. brightness() 調整亮度</h3><p>函示內放入 % 數來調整亮度，<br><code>&lt; 100%</code> 會減少亮度，<br><code>&gt; 100%</code> 會增加亮度。<br><code>0%</code> 會呈現全黑，預設值為 <code>1</code> 。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">brightness</span>(<span class="number">2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-contrast-調整對比度"><a href="#3-contrast-調整對比度" class="headerlink" title="3. contrast() 調整對比度"></a>3. contrast() 調整對比度</h3><p>函示內放入 % 數來調整對比度，<br><code>&lt; 100%</code> 會減少對比度，<br><code>&gt; 100%</code> 會增加對比度。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">contrast</span>(<span class="number">200%</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-drop-shadow-陰影效果"><a href="#4-drop-shadow-陰影效果" class="headerlink" title="4. drop-shadow() 陰影效果"></a>4. drop-shadow() 陰影效果</h3><p>這個函數的特性和 box-shadow 的屬性很相似，<br>但 drop-shadow 可以製作和物件不透明區域完全相同形狀的陰影，詳細比較可以參考<a href="http://blog.shihshih.com/drop-shadow-vs-box-shadow/">這篇文章</a></p>
<p><code>drop-shadow()</code> 可帶入的 4 個參數分別為：</p>
<ol>
<li>(必填)offset-x：陰影水平偏移量的長度</li>
<li>(必填)offset-y：陰影垂直偏移量的長度</li>
<li>blur-radius：隱影模糊程度，值越大越模糊</li>
<li>color：陰影顏色<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(<span class="number">16px</span> <span class="number">16px</span> <span class="number">10px</span> black)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="5-grayscale-調整灰階程度"><a href="#5-grayscale-調整灰階程度" class="headerlink" title="5. grayscale() 調整灰階程度"></a>5. grayscale() 調整灰階程度</h3><p>函示內放入 % 數或、0-1 來調整圖像灰度，<br>值介於 0-100% 或 0-1，<br>0% 和 0 代表顏色不變，為預設值，100% 和 1 代表變黑白的。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>:<span class="built_in">grayscale</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-hue-rotate-色相相轉"><a href="#6-hue-rotate-色相相轉" class="headerlink" title="6. hue-rotate() 色相相轉"></a>6. hue-rotate() 色相相轉</h3><p>透過色相旋轉來調整顏色呈現，函示內放入 deg 色環角度值來調整圖像灰度，<br>值介於 0deg - 360deg 間，超過 <code>360deg</code> 的值相當於繞了一圈。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">hue-rotate</span>(<span class="number">90deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="7-invert-負面效果"><a href="#7-invert-負面效果" class="headerlink" title="7. invert() 負面效果"></a>7. invert() 負面效果</h3><p>所謂的負片就是反轉成顏色和明暗程度，<br>函示內放入 % 數設定反轉的程度，值介於 0-100% 間，預設值為 0%。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">invert</span>(<span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8-opactiy-調整透明度"><a href="#8-opactiy-調整透明度" class="headerlink" title="8.opactiy 調整透明度"></a>8.opactiy 調整透明度</h3><p>函示內放入 % 數設定透明度，值介於 0-100% 間，預設值為 100%。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">opacity</span>(<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="9-saturate-調整飽和度"><a href="#9-saturate-調整飽和度" class="headerlink" title="9.saturate() 調整飽和度"></a>9.saturate() 調整飽和度</h3><p>函示內放入 % 數設定飽和度，預設值為 1<br><code>&lt;100%</code> 越來越不飽和<br><code>&gt;100％</code> 高度飽和</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">saturate</span>(<span class="number">200%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="10-sepia-深褐色效果"><a href="#10-sepia-深褐色效果" class="headerlink" title="10. sepia() 深褐色效果"></a>10. sepia() 深褐色效果</h3><p>函示內放入 % 數設定深褐色的程度，值介於 0-100% 之間，預設值是 0。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">sepia</span>(<span class="number">100%</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="複合效果"><a href="#複合效果" class="headerlink" title="複合效果"></a>複合效果</h3><p>除了單獨的使用濾鏡外，我們也可以組合任意數量的函數來設定效果。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 同時設定對比度、亮度、飽和度*/</span></span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">contrast</span>(<span class="number">175%</span>) <span class="built_in">brightness</span>(<span class="number">3%</span>) <span class="built_in">saturate</span>(<span class="number">200%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>以上就是不同 filter 的介紹，實作上如果有遇到子元素被 filter 影響的問題，<br>可以參考這篇文章 -<a href="https://shinyu0430.github.io/2021/09/18/filterchildproblem/">CSS Filter 影響子元素的解決辦法</a></p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter">MDN Web Docs-filter</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS Filter 影響子元素的解決辦法</title>
    <url>/2021/09/18/filterchildproblem/</url>
    <content><![CDATA[<p>透過 filter 我們可以為元素加上不同的效果，像是模糊，色彩偏移等(<a href="https://shinyu0430.github.io/2021/09/18/cssfilter">filter 介紹</a>)。但我們可能會發現一個奇怪的現象：</p>
<h2 id="filter-導致-position-失效"><a href="#filter-導致-position-失效" class="headerlink" title="filter 導致 position 失效"></a>filter 導致 position 失效</h2><p>在這個範例中，我們先設定兩個 <code>.box</code>，再分別在子元素 <code>.box div</code> 加上 <code>position:fixed</code>，第二個<code>.box</code>再單獨設定<code>filter:grayscale(1)</code>。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:fixed&quot;</span>&gt;</span>I am fixed on scroll<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;filter:grayscale(1)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:fixed&quot;</span>&gt;</span>I move with the scroll<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>從下面的 CodePen 範例中，我們可以發現向下滾動後，加上了 filter 的 <code>.box div</code> 不會跟著移動。</p>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="XWgZLaV" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/XWgZLaV">
  </a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p>會這樣改變的原因是因為，加上了 filter 後子元素不再以 Viewport 做為基準，<br>而是以設定了 filter 的 <code>.box</code> 為基準。</p>
<p>更詳細的說明可以參考 <a href="https://drafts.fxtf.org/filter-effects/#FilterProperty">W3C</a> 的解釋，大意就是當 <code>filter</code> 的屬性不是 <code>none</code> 時，除非 filter 是設定在根節點（<code>HTML</code>）上，不然會為有設定 <code>position:absolute</code> 或 <code>position:fixed</code> 的子元素產生一個新的容器，使得這些子元素的定位基準變成這些新的容器。</p>
<p>另外，這個現象也會發生在 <code>transform</code> 上喔！</p>
<p><strong>解決方案</strong><br>我們可以透過將 filter 設定在子元素來解決。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:fixed;filter:grayscale(1)&quot;</span>&gt;</span>I move with the scroll<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="ExXQBwL" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/ExXQBwL">
  css-filter-child-position-resolve</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p>這樣一來子元素的定位就不會被影響了～</p>
<h2 id="filter-影響子元素樣式"><a href="#filter-影響子元素樣式" class="headerlink" title="filter 影響子元素樣式"></a>filter 影響子元素樣式</h2><p>我們可能會想透過 filter 為我們的背景圖片加上模糊（blur）效果：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">style</span>=<span class="string">&quot;filter:blur(3px)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Cute Dog<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>但實作後卻會發現圖片上的字也一起變模糊了</p>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="LYLQKRB" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/LYLQKRB">
  </a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p><strong>解決方案</strong><br>我們可以將模糊效果改設定在偽元素上來避免這個問題。<br>(記得也要拿掉在<code>.box</code>設定的 filter)</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://images.unsplash.com/photo-1552053831-71594a27632d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=624&amp;q=80&quot;</span>)</span><br><span class="line">    <span class="number">50%</span> <span class="number">30%</span>;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">3px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="RwgQzXP" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/RwgQzXP">
  css-filter-child-style</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://stackoverflow.com/questions/52937708/why-does-applying-a-css-filter-on-the-parent-break-the-child-positioning">Why does applying a CSS-Filter on the parent break the child positioning?</a></p>
<p><a href="https://blog.csdn.net/qq_41883423/article/details/105867026">CSS：filter（滤镜）修饰父元素背景，影响子元素问题解决</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 學習常用字：大陸/台灣對照表</title>
    <url>/2021/09/07/jswordcompare/</url>
    <content><![CDATA[<p>以下整理了幾個在學習 JavaScript 中常見的詞語。</p>
<span id="more"></span>
<table>
<thead>
<tr>
<th>英文</th>
<th>台灣</th>
<th>大陸</th>
</tr>
</thead>
<tbody><tr>
<td>array</td>
<td>陣列</td>
<td>數組</td>
</tr>
<tr>
<td>boolean</td>
<td>布林值</td>
<td>布尔值</td>
</tr>
<tr>
<td>cache</td>
<td>快取</td>
<td>緩存</td>
</tr>
<tr>
<td>call</td>
<td>呼叫</td>
<td>調用</td>
</tr>
<tr>
<td>callback</td>
<td>回呼</td>
<td>回调</td>
</tr>
<tr>
<td>class</td>
<td>類別</td>
<td>类</td>
</tr>
<tr>
<td>context</td>
<td>背景關係</td>
<td>上下文</td>
</tr>
<tr>
<td>declaration</td>
<td>宣告</td>
<td>声明</td>
</tr>
<tr>
<td>destructor</td>
<td>解構式</td>
<td>析构函数</td>
</tr>
<tr>
<td>entity</td>
<td>物體</td>
<td>实体</td>
</tr>
<tr>
<td>expression</td>
<td>運算式</td>
<td>表达式</td>
</tr>
<tr>
<td>function</td>
<td>函式</td>
<td>函数</td>
</tr>
<tr>
<td>global</td>
<td>全域</td>
<td>全局</td>
</tr>
<tr>
<td>invoke</td>
<td>喚起</td>
<td>调用</td>
</tr>
<tr>
<td>local</td>
<td>區域</td>
<td>局部</td>
</tr>
<tr>
<td>loop</td>
<td>迴圈</td>
<td>循环</td>
</tr>
<tr>
<td>memory</td>
<td>記憶體</td>
<td>内存</td>
</tr>
<tr>
<td>module</td>
<td>模組</td>
<td>模块</td>
</tr>
<tr>
<td>object</td>
<td>物件</td>
<td>对象</td>
</tr>
<tr>
<td>return</td>
<td>回傳、傳回</td>
<td>返回</td>
</tr>
<tr>
<td>string</td>
<td>字串</td>
<td>字符串</td>
</tr>
<tr>
<td>type</td>
<td>型別</td>
<td>类型</td>
</tr>
<tr>
<td>variable</td>
<td>變數</td>
<td>变量</td>
</tr>
<tr>
<td>recursion</td>
<td>遞迴</td>
<td>递归</td>
</tr>
<tr>
<td>run</td>
<td>執行</td>
<td>運行</td>
</tr>
<tr>
<td>object</td>
<td>物件</td>
<td>对象</td>
</tr>
<tr>
<td>constructor</td>
<td>建構式</td>
<td>构造函数</td>
</tr>
<tr>
<td>batch</td>
<td>批次</td>
<td>批量</td>
</tr>
</tbody></table>
<p>資料來源：<a href="https://zh.wikibooks.org/zh-tw/%E5%A4%A7%E9%99%86%E5%8F%B0%E6%B9%BE%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%9C%AF%E8%AF%AD%E5%AF%B9%E7%85%A7%E8%A1%A8">大陸台灣計算機術語對照表 </a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Margin 和 Padding 的簡寫</title>
    <url>/2021/09/18/marginpaddingshorthand/</url>
    <content><![CDATA[<style>
    img{
        width:50%
    }
</style>
<p>在撰寫 CSS 的時候，我們常會使用到 Margin 和 Padding 來調整元素的位置，<br>而透過簡寫可以讓我們的 CSS 更加整潔。</p>
<p>Margin 和 Padding 的縮寫方式是相同的，有四種寫法：</p>
<span id="more"></span>
<ol>
<li><p><code>margin: 10px</code>：margin:上下左右<br>同時設定「上下左右」的間距<br><img src="https://i.imgur.com/RqJy4GM.png"></p>
</li>
<li><p><code>margin:10px 20px</code>：margin:上下 左右<br>分別設定「上下」和「左右」的間距<br><img src="https://i.imgur.com/9j4szx2.png"></p>
</li>
<li><p><code>margin:10px 20px 30px</code>：margin:上 左右 下<br>分別設定「上」、「左右」和「下」的間距<br><img src="https://i.imgur.com/NPcVL8c.png"></p>
</li>
<li><p><code>margin:10px 30px 40px 20px</code>：margin: 上 右 下 左<br>分別設定「上」、「右」、「下」和「左」的間距<br><img src="https://i.imgur.com/I9mJQ89.png"></p>
</li>
</ol>
<h2 id="縮寫練習"><a href="#縮寫練習" class="headerlink" title="縮寫練習"></a>縮寫練習</h2><h3 id="練習一"><a href="#練習一" class="headerlink" title="練習一"></a>練習一</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">20px</span>; <span class="comment">/* 上、右、下、左 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>按照第三種方法簡化後，可以寫成：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>; <span class="comment">/* 上、左右、下 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="練習二"><a href="#練習二" class="headerlink" title="練習二"></a>練習二</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>按照第二種方法簡化後，可以寫成：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">0</span>;  <span class="comment">/* 上下、左右 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果希望了解其他的 CSS 縮寫，可以查看 <a href="https://www.kobzarev.com/wp-content/uploads/cheatsheets/css/css-cheat-sheet.pdf">CSS-Shorthand-Cheat-Sheet.pdf</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>解決兩個寬度 50％ 的子元素無法在同行的問題</title>
    <url>/2021/09/19/inlineblockwidth50/</url>
    <content><![CDATA[<p>行內區塊(<code>inline-block</code>)可以讓我們可以以行內（<code>inline</code>）的方式呈現，但同時擁有（<code>block</code>）的屬性，不過，在設定寬度上我們可能會遇到一個奇怪的問題：</p>
<span id="more"></span>
<p>假設我們想要新增兩個在同行的 div 元素，並讓他們各佔一半，我們會這樣撰寫：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>CHILD<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>CHILD<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#d8e2dc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我們可能會預期畫面出現<br><img src="https://imgur.com/rUFostx.jpg"><br>卻發現結果兩個子元素沒有在同一行<br><img src="https://imgur.com/sfRoQzu.jpg"><br>而會有這樣的問題是因為<strong>換行符號</strong>。我們在第一個 <code>div</code> 標籤後方加上的換行符號，會相等於空白符號，這個空白符號的寬度加上兩個子元素的寬度就會超過 100%，導致兩個子元素無法放在同一行。</p>
<p><strong>解決辦法有幾種：</strong></p>
<ol>
<li><p>刪除換行符號<br>最簡單的方式就是直接刪除換行符號，不過這會造成 HTML 結構的可讀性變差。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>CHILD<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span>CHILD<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>將字體大小設為 0<br>知道是因為空白符號造成無法在同行後，我們可以聯想到只要將字體設為 0 ，這個空白就不會佔有空間了。</p>
</li>
</ol>
<p>實作放事就是直接在父層加上 font-size:0 （記得子層如果有文字要記得設定字體大小喔）。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0</span>; <span class="comment">/* 隱藏空白符號 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;  <span class="comment">/* 設定子元素字體大小 */</span></span><br><span class="line">  <span class="attribute">width</span>:<span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>除了這些也可以使用負的 margin、letter-spacing、word-spacing 調整，但個人覺得沒有那麼實用，以上就是行內區塊無法同行的解決辦法說明囉。</p>
<p><strong>參考資料</strong><br><a href="https://www.zhangxinxu.com/wordpress/2010/11/%E6%8B%9C%E6%8B%9C%E4%BA%86%E6%B5%AE%E5%8A%A8%E5%B8%83%E5%B1%80-%E5%9F%BA%E4%BA%8Edisplayinline-block%E7%9A%84%E5%88%97%E8%A1%A8%E5%B8%83%E5%B1%80/">拜拜了,浮动布局-基于display:inline-block的列表布局</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>免費圖片空間 Imgur 使用教學</title>
    <url>/2021/09/19/imgurturtorial/</url>
    <content><![CDATA[<style>
    img{
        width:70%;
    }
</style>

<p>Imgur 是一個網路相簿網站，2009年創立，主要提供免費的相片儲存服務，現今每日使用者達數百萬。Imgur 最大的優點就是它沒有流量限制，也不需要註冊帳號就可以直接使用，使用上非常方便。</p>
<span id="more"></span>
<h2 id="Imgur-網頁介紹"><a href="#Imgur-網頁介紹" class="headerlink" title="Imgur 網頁介紹"></a>Imgur 網頁介紹</h2><p>進到 imgur 的網頁後，我們可以看到下方有許多其他使用者上傳的圖片，<br><img src="https://imgur.com/XJfw5tc.jpg"><br>我們也可以透過上方的搜尋欄，搜尋特定的圖片<br><img src="https://imgur.com/k2sSTN1.jpg"></p>
<h2 id="上傳檔案"><a href="#上傳檔案" class="headerlink" title="上傳檔案"></a>上傳檔案</h2><p>如果我們想要上傳圖片，可以點擊首頁左上方的 New Post<br><img src="https://imgur.com/56WlOl4.jpg"><br>點擊後會跳轉到這個畫面，可以透過拖移或是點擊的方式上傳我們本地端的圖片，imgur 支援多種圖片格式，單張非動畫圖片最大容量限制為 20 MB，每小時最多上傳 50 張，詳細限制可以參考<a href="https://help.imgur.com/hc/en-us/articles/115000083326-What-files-can-I-upload-What-is-the-size-limit-">Imgur Help</a>的說明。</p>
<p><img src="https://imgur.com/TWYw3Mm.jpg"><br>成功上傳後會出現這樣的畫面，雖然前面有提到首頁可以看到其他使用者上傳的圖片，但<strong>預設</strong>上傳的圖片是<strong>不會</strong>連結到 Imgur 社群的喔，如果希望上傳到社群，可以替圖片加上標題(title)和說明(description)，再點擊「To Community」就可以公開囉。<br><img src="https://imgur.com/iOHIZ9E.jpg"><br>複製圖片網址的方式也很簡單，將滑鼠移到圖片上，並點擊 Copy link 就能成功複製圖片網址了（<a href="https://imgur.com/ipZyGmJ.jpg">https://imgur.com/ipZyGmJ.jpg</a>），點擊「···」則可以對圖片進行編輯（調整大小、旋轉圖片）、分享連結、下載、刪除。<br><img src="https://imgur.com/rhF08TY.jpg"></p>
<h2 id="在-HTML-中插入外部圖片"><a href="#在-HTML-中插入外部圖片" class="headerlink" title="在 HTML 中插入外部圖片"></a>在 HTML 中插入外部圖片</h2><p>使用 Imgur 在 HTML 中插入圖片有兩種方式</p>
<ol>
<li>將 Imgur 嵌入<br>呈現效果如下：<blockquote class="imgur-embed-pub" lang="en" data-id="rhF08TY"><a href="https://imgur.com/rhF08TY">View post on imgur.com</a></blockquote><script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script></li>
</ol>
<p>使用的方式為點擊圖片上方的「···」，選取 Get share links<br><img src="https://imgur.com/yE1mDlY.jpg"><br>再複製 HTML Embed 的語法，貼上到我們的網頁中。<br><img src="https://imgur.com/vdEGgvT.jpg"></p>
<ol start="2">
<li>使用 img 語法<br>如果不希望保留 Imgur 的外框，可以直接使用 img 標籤，呈現效果如下：<img src="https://imgur.com/ipZyGmJ.jpg" alt="範例圖片"> </li>
</ol>
<p>，並放入我們點擊 Copy Link 得到的「<a href="https://imgur.com/ipZyGmJ%E3%80%8D%EF%BC%8C%E5%9C%A8%E5%BE%8C%E9%9D%A2">https://imgur.com/ipZyGmJ」，在後面</a> <strong>加上副檔名<code>.jpg</code></strong> ，就可以正確插入圖片囉。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://imgur.com/ipZyGmJ.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;範例圖片&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<h2 id="帳號註冊"><a href="#帳號註冊" class="headerlink" title="帳號註冊"></a>帳號註冊</h2><p>如果我們希望上傳後還能對這些圖片進行管理的話，可以註冊 Imgur 帳號。註冊的方式也很簡單，到首頁點擊右上方的 SignUp 就可以註冊了。<br><img src="https://imgur.com/VuWJi0Q.jpg"><br>成功登入後我們就可以在這管理自己上傳的圖片囉。<br><img src="https://imgur.com/o5CzMa2.jpg"></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>JavaScript 字串方法整理</title>
    <url>/2021/09/20/javascriptstringmethod/</url>
    <content><![CDATA[<p>以下針對不同類型的字串方法做分類整理：</p>
<span id="more"></span>
<!-- no toc -->
<h2 id="回傳單一字元"><a href="#回傳單一字元" class="headerlink" title="回傳單一字元"></a>回傳單一字元</h2><h3 id="charAt-：回傳指定位置的字元"><a href="#charAt-：回傳指定位置的字元" class="headerlink" title="charAt()：回傳指定位置的字元"></a>charAt()：回傳指定位置的字元</h3><p>在參數中放入 0 到 字串長度-1 的數字，</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;HELLO WORLD&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> char = str.charAt(<span class="number">2</span>) <span class="comment">//L</span></span><br></pre></td></tr></table></figure>

<h3 id="charCodeAt-：回傳指定位置字元的-Unicode-編碼"><a href="#charCodeAt-：回傳指定位置字元的-Unicode-編碼" class="headerlink" title="charCodeAt()：回傳指定位置字元的 Unicode 編碼"></a>charCodeAt()：回傳指定位置字元的 Unicode 編碼</h3><p>在參數中放入 0 到 字串長度-1 的數字。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;HELLO WORLD&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> char = str.charCodeAt(<span class="number">0</span>);<span class="comment">//72</span></span><br></pre></td></tr></table></figure>

<h2 id="回傳新字串"><a href="#回傳新字串" class="headerlink" title="回傳新字串"></a>回傳新字串</h2><h3 id="concat-：連接多個字串"><a href="#concat-：連接多個字串" class="headerlink" title="concat()：連接多個字串"></a>concat()：連接多個字串</h3><p>參數中放入欲連接的字串。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str1 = <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">&quot;world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str1.concat(str2); <span class="comment">//&quot;Hello world!&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 可以放入多個字串</span></span><br><span class="line"><span class="keyword">let</span> str1 = <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">&quot;world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> str3 = <span class="string">&quot;mavis!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str1.concat(str2,str3); <span class="comment">//&quot;Hello world!mavis!&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="repeat-：複製字串數次"><a href="#repeat-：複製字串數次" class="headerlink" title="repeat()：複製字串數次"></a>repeat()：複製字串數次</h3><p>參數中放入要複製的次數</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.repeat(<span class="number">3</span>);<span class="comment">//&quot;Hello!Hello!Hello!&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="slice-：提取字串片段"><a href="#slice-：提取字串片段" class="headerlink" title="slice()：提取字串片段"></a>slice()：提取字串片段</h3><p>參數中可放入兩個值：<code>slice(起始位置,結束位置)</code></p>
<ol>
<li>起始位置，可為負值</li>
<li>（選填）結束位置，可為負值，預設會傳到字串結尾</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.slice(<span class="number">0</span>,<span class="number">5</span>); <span class="comment">//&quot;Hello&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.slice(-<span class="number">2</span>,<span class="number">5</span>); <span class="comment">//&quot;d!&quot;</span></span><br></pre></td></tr></table></figure>


<h3 id="substr-：提取字串片段"><a href="#substr-：提取字串片段" class="headerlink" title="substr()：提取字串片段"></a>substr()：提取字串片段</h3><p>參數中可放入兩個值：<code>substr(起始位置,提取字串長度)</code></p>
<ol>
<li>起始位置，可為負值</li>
<li>（選填）提取字串長度，預設回傳到字串結尾<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.substr(<span class="number">6</span>,<span class="number">5</span>)<span class="comment">//world</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="substring-：提取字串片段"><a href="#substring-：提取字串片段" class="headerlink" title="substring()：提取字串片段"></a>substring()：提取字串片段</h3><p>參數中可放入兩個值：<code>substring(起始位置,結束位置)</code></p>
<ol>
<li>起始位置，不可為負值</li>
<li>（選填）結束位置，不可為負值，預設會傳到字串結尾<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.substring(<span class="number">0</span>,<span class="number">5</span>); <span class="comment">//&quot;Hello&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.substring(<span class="number">0</span>,<span class="number">5</span>); <span class="comment">//&quot;Hello&quot;，帶入負值會從預設 0 開始</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="trim-：去除字串兩邊空白"><a href="#trim-：去除字串兩邊空白" class="headerlink" title="trim()：去除字串兩邊空白"></a>trim()：去除字串兩邊空白</h3><p>空白包含 enter、tab、換行符號，並不適用於 null, undefined。 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;  mavis  &quot;</span>;</span><br><span class="line"><span class="keyword">let</span> n = str.trim();<span class="comment">// &quot;Mavis&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="檢查字串"><a href="#檢查字串" class="headerlink" title="檢查字串"></a>檢查字串</h2><h3 id="endsWith-：判斷字串是否以特定字串結尾"><a href="#endsWith-：判斷字串是否以特定字串結尾" class="headerlink" title="endsWith()：判斷字串是否以特定字串結尾"></a>endsWith()：判斷字串是否以特定字串結尾</h3><p>判斷字串是否以特定字串結尾，回傳 Boolean 值。參數放入要判斷的特定字串。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意：會判斷大小寫</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world&quot;</span>;</span><br><span class="line">str.endsWith(<span class="string">&quot;world&quot;</span>)   <span class="comment">// true</span></span><br><span class="line">str.endsWith(<span class="string">&quot;World&quot;</span>)   <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<h3 id="startsWith-：判斷字串是否以特定字串開頭"><a href="#startsWith-：判斷字串是否以特定字串開頭" class="headerlink" title="startsWith()：判斷字串是否以特定字串開頭"></a>startsWith()：判斷字串是否以特定字串開頭</h3><p>判斷字串是否以特定字串開頭，回傳 Boolean 值。參數放入要判斷的特定字串。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意：會區分大小寫</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world&quot;</span>;</span><br><span class="line">str.endsWith(<span class="string">&quot;Hello&quot;</span>)   <span class="comment">// true</span></span><br><span class="line">str.endsWith(<span class="string">&quot;hello&quot;</span>)   <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<h3 id="includes-：判斷字串中是否包含特定子串"><a href="#includes-：判斷字串中是否包含特定子串" class="headerlink" title="includes()：判斷字串中是否包含特定子串"></a>includes()：判斷字串中是否包含特定子串</h3><p>判斷字串中是否包含特定子串，回傳 Boolean 值，<br>參數中可放入兩個值：<code>includes(判斷的特定字串,起始位置)</code></p>
<ol>
<li>要判斷的特定字串</li>
<li>（選填）起始位置，預設為 0</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world!!!!&quot;</span>;</span><br><span class="line">str.includes(<span class="string">&quot;world&quot;</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 填入第二個參數，設定起始位置</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello world,nice to meet you!&quot;</span>;</span><br><span class="line">str.includes(<span class="string">&quot;world&quot;</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure>

<h3 id="indexOf-：尋找字串首次出現的位置"><a href="#indexOf-：尋找字串首次出現的位置" class="headerlink" title="indexOf()：尋找字串首次出現的位置"></a>indexOf()：尋找字串首次出現的位置</h3><p>如果不包含，就回傳 -1。<br>參數中可放入兩個值：<code>indexOf(判斷的特定字串,起始位置)</code></p>
<ol>
<li>要判斷的特定字串</li>
<li>（選填）起始位置，預設為 0</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意：會區分大小寫</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line">str.indexOf(<span class="string">&quot;world&quot;</span>); <span class="comment">//6</span></span><br><span class="line">str.indexOf(<span class="string">&quot;World&quot;</span>); <span class="comment">//-1</span></span><br></pre></td></tr></table></figure>
<h3 id="lastIndexOf-：從後尋找字串首次出現的位置"><a href="#lastIndexOf-：從後尋找字串首次出現的位置" class="headerlink" title="lastIndexOf()：從後尋找字串首次出現的位置"></a>lastIndexOf()：從後尋找字串首次出現的位置</h3><p>如果不包含，就回傳 -1。<br>參數中可放入兩個值：<code>lastIndexOf(判斷的特定字串,起始位置)</code></p>
<ol>
<li>要判斷的特定字串</li>
<li>（選填）起始位置，預設為 0</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意：會區分大小寫</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello world!world!&quot;</span>;</span><br><span class="line">str.lastIndexOf(<span class="string">&quot;world&quot;</span>); <span class="comment">//12</span></span><br><span class="line">str.lastIndexOf(<span class="string">&quot;World&quot;</span>); <span class="comment">//-1</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 填入第二個參數，設定起始位置</span></span><br><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Hello world!Hello world!&quot;</span>;</span><br><span class="line">str.lastIndexOf(<span class="string">&quot;world&quot;</span>, <span class="number">10</span>);<span class="comment">//6</span></span><br></pre></td></tr></table></figure>
<h2 id="檢查字串-可與正規表達式搭配"><a href="#檢查字串-可與正規表達式搭配" class="headerlink" title="檢查字串 - 可與正規表達式搭配"></a>檢查字串 - 可與正規表達式搭配</h2><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Regular_Expressions">正規表達式</a>是被用來匹配字串中字元組合的模式，若還不清楚使用方法，可以參考<a href="https://5xruby.tw/posts/15min-regular-expression">這篇文章</a>。</p>
<h3 id="search-：尋找與字串或正規表達式相同的值"><a href="#search-：尋找與字串或正規表達式相同的值" class="headerlink" title="search()：尋找與字串或正規表達式相同的值"></a>search()：尋找與字串或正規表達式相同的值</h3><p>尋找與正規表達式相同的值，回傳字串開始的索引值，沒找到回傳 -1，參數中放入要尋找找的值。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.search(<span class="string">&quot;world&quot;</span>);<span class="comment">//6</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.search(<span class="regexp">/world/</span>);<span class="comment">//6</span></span><br></pre></td></tr></table></figure>
<h3 id="match-：尋找與字串或正規表達式相同的多個值"><a href="#match-：尋找與字串或正規表達式相同的多個值" class="headerlink" title="match()：尋找與字串或正規表達式相同的多個值"></a>match()：尋找與字串或正規表達式相同的多個值</h3><p>尋找與字串或正規表達式相同的多個值，回傳第一個成功的詳細資料，參數中放入要尋找找的值。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.match(<span class="string">&quot;world&quot;</span>);<span class="comment">//[&#x27;world&#x27;,index:6,....]</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.match(<span class="regexp">/world/</span>);<span class="comment">//[&#x27;world&#x27;,index:6,....]</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式：加上 g flag 會列出所有比對成功的字串</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.match(<span class="regexp">/world/g</span>);<span class="comment">//[&#x27;world&#x27;, &#x27;world&#x27;]</span></span><br></pre></td></tr></table></figure>
<h3 id="replace-：尋找與字串或正規表達式相同的值，並替換"><a href="#replace-：尋找與字串或正規表達式相同的值，並替換" class="headerlink" title="replace()：尋找與字串或正規表達式相同的值，並替換"></a>replace()：尋找與字串或正規表達式相同的值，並替換</h3><p>尋找與字串或正規表達式相同的值，並替換第一個值。<br>參數中放入兩個值：<code>replace(要提換掉的值,要替換的值)</code></p>
<ol>
<li>要尋找的值</li>
<li>要替換的值</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replace(<span class="string">&quot;world&quot;</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!world!</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replace(<span class="regexp">/world/</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!world!</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式：加上 g flag 可以替換所有符合的值</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replace(<span class="regexp">/world/g</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!mavis!</span></span><br></pre></td></tr></table></figure>

<h3 id="replaceAll-：尋找與字串或正規表達式相同的多個值，並替換"><a href="#replaceAll-：尋找與字串或正規表達式相同的多個值，並替換" class="headerlink" title="replaceAll()：尋找與字串或正規表達式相同的多個值，並替換"></a>replaceAll()：尋找與字串或正規表達式相同的多個值，並替換</h3><p>尋找與字串或正規表達式相同的多個值，並替換所有值。<br>參數中放入兩個值：<code>replaceAll(要替換掉的值,要替換的值)</code></p>
<ol>
<li>要替換掉的值</li>
<li>要替換的值<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replaceAll(<span class="string">&quot;world&quot;</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!mavis!</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正規表達式</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world!Hello!world!&quot;</span>; </span><br><span class="line">str.replaceAll(<span class="regexp">/world/</span>,<span class="string">&quot;mavis&quot;</span>);<span class="comment">//Hello!mavis!Hello!mavis!</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="字串內容轉換"><a href="#字串內容轉換" class="headerlink" title="字串內容轉換"></a>字串內容轉換</h2><h3 id="toLowerCase-：字串轉換成小寫"><a href="#toLowerCase-：字串轉換成小寫" class="headerlink" title="toLowerCase()：字串轉換成小寫"></a>toLowerCase()：字串轉換成小寫</h3><p>將字串轉換成小寫</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;MAVIS&quot;</span>;</span><br><span class="line">str.toLowerCase();<span class="comment">// &quot;mavis&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="toUpperCase-：字符串轉換成大寫"><a href="#toUpperCase-：字符串轉換成大寫" class="headerlink" title="toUpperCase()：字符串轉換成大寫"></a>toUpperCase()：字符串轉換成大寫</h3><p>字串轉換成大寫</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;mavis&quot;</span>;</span><br><span class="line">str.toUpperCase();<span class="comment">// &quot;Mavis&quot;</span></span><br></pre></td></tr></table></figure>


<h2 id="字串與陣列"><a href="#字串與陣列" class="headerlink" title="字串與陣列"></a>字串與陣列</h2><h3 id="split-：字串分割為陣列"><a href="#split-：字串分割為陣列" class="headerlink" title="split()：字串分割為陣列"></a>split()：字串分割為陣列</h3><p>參數中可放入兩個值：<code>split(分割條件,回傳陣列最大長度)</code></p>
<ol>
<li>（選填）隔開陣列中每個元素的字串，預設不改變字串</li>
<li>（選填）回傳陣列的最大長度，預設不考慮</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&quot;Hello!world&quot;</span>;</span><br><span class="line">str.split(); <span class="comment">//[&quot;Hello!world&quot;]</span></span><br><span class="line">str.split(<span class="string">&quot;&quot;</span>); <span class="comment">//[&quot;H&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;,&quot;!&quot;,&quot;w&quot;,&quot;o&quot;,&quot;r&quot;,&quot;l&quot;,&quot;d&quot;]</span></span><br><span class="line">str.split(<span class="string">&quot;!&quot;</span>); <span class="comment">//[&quot;Hello&quot;,&quot;world&quot;]</span></span><br></pre></td></tr></table></figure>
<h3 id="join-：陣列合併為字串"><a href="#join-：陣列合併為字串" class="headerlink" title="join()：陣列合併為字串"></a>join()：陣列合併為字串</h3><p>參數可（選填）放入隔開陣列中每個元素的字串：<code>join(分割字串)</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[<span class="string">&quot;c&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;t&quot;</span>];</span><br><span class="line">arr.join(); <span class="comment">//&quot;cat&quot;</span></span><br><span class="line">arr.join(<span class="string">&quot;!&quot;</span>); <span class="comment">//&quot;c!a!t&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS 寬度自適應： max-width、min-width、fit-content 介紹</title>
    <url>/2021/09/21/maxwidthminwidthfitcontent/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 CSS3 中新增了幾個設置寬度屬性的關鍵字：<code>max-width</code>、<code>min-width</code>、<code>fit-content</code> 就讓我們來一一了解這些觀念吧！</p>
<p>注意：這裡的「寬度」指的是語意上的寬度，而不是 CSS 的 width，也就是說，如果文字方向是垂直的或在 flexbox 或 Grid 中，這些值也對 CSS 的 height 有效。另外，它們在 min-width、min-height、max-width、max-height 中也都是有效的。</p>
<h2 id="max-content：寬度等於內容最大寬度"><a href="#max-content：寬度等於內容最大寬度" class="headerlink" title="max-content：寬度等於內容最大寬度"></a>max-content：寬度等於內容最大寬度</h2><blockquote>
<p>The max-content sizing keyword represents the intrinsic maximum width or height of the content. For text content this means that the content will not wrap at all even if it causes overflows. –<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/max-content">MDN Web Docs</a></p>
</blockquote>
<p>max-content 表示內容固有的最大的寬度或高度，以 text 內容來說，就算會溢出（overflow）也不會換行。</p>
<p>我們可以從下面的範例中看到，當我們在 <code>item</code> 加上 <code>max-content</code> 後，文字便不會換行，做用和 <code>white-space:nowrap</code> 很相似。</p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="ZEyowRg" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/ZEyowRg">
  </a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>


<h2 id="min-content：寬度等於內容最小寬度"><a href="#min-content：寬度等於內容最小寬度" class="headerlink" title="min-content：寬度等於內容最小寬度"></a>min-content：寬度等於內容最小寬度</h2><blockquote>
<p>The smallest size a box could take that doesn’t lead to overflow that could be avoided by choosing a larger size. — <a href="https://www.w3.org/TR/css-sizing-3/#min-content">W3C</a></p>
</blockquote>
<p>min-content 表示最小不會造成溢出（overflow）的寬度。對於文字（text）內容來說，會變得與最長的單詞一樣的寬度。</p>
<p>以下面這個範例來看，我們可以看到加上了 <code>min-content</code> 的 <code>item</code> ，會以最長單字（consecteturctetur）的寬度作為 <code>item</code> 的寬度。</p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="VwWxgEW" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/VwWxgEW">
  css-max-content-demo</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p>再來我們可以查看下方這個範例，會發現未加上 <code>min-content</code> 的區塊元素 item 會繼承父成的寬度 ，而加上了 <code>min-content</code> 的 item 則以圖片的寬度做為 item 的寬度，這是因為 <code>width:100px</code> 的圖片是最小不會造成溢出（overflow）的寬度。</p>
<p class="codepen" data-height="400" data-default-tab="html,result" data-slug-hash="jOwxoRR" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/jOwxoRR">
  css-min-content-demo</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>


<h2 id="fit-content：依照內容寬度伸縮"><a href="#fit-content：依照內容寬度伸縮" class="headerlink" title="fit-content：依照內容寬度伸縮"></a>fit-content：依照內容寬度伸縮</h2><blockquote>
<p>The fit-content behaves as fit-content(stretch). In practice this means that the box will use the available space, but never more than max-content. –<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/max-content">MDN Web Docs</a></p>
</blockquote>
<p>fit-content 會讓元素使用可用空間，但不會大於 max-content。</p>
<p>在下面這個範例中可以看到，區塊元素 <code>item</code> 加上 <code>fit-content</code> 後，寬度會與內容寬度相同。</p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="dyReERp" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/dyReERp">
  css-fill-available</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p>這個特性在處理區塊水平置中上非常方便</p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="wvejVBK" data-user="0430shinyu" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/0430shinyu/pen/wvejVBK">
  css-fit-content-demo</a> by 蔡蔡 Mavis (<a href="https://codepen.io/0430shinyu">@0430shinyu</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>最後，在針對三個做個總結：</p>
<ol>
<li>max-content：寬度等於子元素最小寬度</li>
<li>min-content：寬度等於子元素最大寬度</li>
<li>fit-content：<br>如果可用空間比<code>max-content</code>大，寬度就等於 <code>max-content</code>，<br>如果可用空間比<code>max-content</code>小，寬度就等於可用空間的寬，<br>如果可用空間比<code>min-content</code>小，那麼寬度就等於 <code>min-content</code>。</li>
</ol>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://stackoverflow.com/questions/51285308/how-do-min-content-and-max-content-work">How do min-content and max-content work?</a></p>
]]></content>
      <categories>
        <category>HTML、CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
</search>
